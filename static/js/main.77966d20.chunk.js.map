{"version":3,"sources":["state/action-types.ts","state/reducers/authReducer.ts","apis/randomNews/randomCrime.ts","state/reducers/rankingReducer.ts","state/reducers/communityReducer.ts","state/reducers/reducers.ts","state/store.ts","components/SelectionItem.tsx","pages/Home.tsx","components/DeadItem.tsx","components/DeadList.tsx","apis/randomNews/randomUser.ts","components/Mistake.tsx","components/CriminalNews.tsx","components/KillingForm.tsx","components/Timer.tsx","pages/Killing.tsx","apis/firebase/fb.ts","state/action-creators.ts","hooks/useActions.ts","hooks/useTypedSelector.ts","components/PostForm.tsx","components/PostItem.tsx","components/PostList.tsx","pages/Community.tsx","components/VictimItem.tsx","components/VictimList.tsx","components/UserItem.tsx","components/UserList.tsx","pages/Ranking.tsx","apis/firebase/fb.auth.ts","components/Header.tsx","styles/globalStyle.ts","components/HowToKill.tsx","components/KillingStartButton.tsx","pages/KillingStart.tsx","components/KillingScoreText.tsx","components/KillingScoreVictims.tsx","components/KillingScoreButtons.tsx","pages/KillingScore.tsx","app/App.tsx","index.tsx"],"names":["ActionType","crimeType","initialState","loading","error","data","reducers","combineReducers","auth","state","action","type","SIGN_IN","payload","SIGN_OUT","UPDATE_KILLED_COUNT","killedCount","UPDATE_VICTIMS","victims","ADD_USER_POSTING","postings","DELETE_USER_POSTING","filter","postId","community","FETCH_COMMUNITY","FETCH_COMMUNITY_SUCCESS","FETCH_COMMUNITY_FAILURE","ADD_POST","DELETE_POST","post","id","ranking","FETCH_RANKING","FETCH_RANKING_SUCCESS","FETCH_RANKING_FAILURE","store","createStore","applyMiddleware","thunk","StyledSelectionItem","styled","div","props","img","SelectionItem","text","StyledHome","Home","to","StyledDeadItem","li","DeadItem","name","src","alt","StyledDeadList","ul","DeadList","deads","length","map","getRandomUser","a","fetch","res","json","randomUser","results","address","location","city","first","last","picture","large","StyledMistake","Mistake","StyledNews","StyledCriminalInfo","CriminalNews","criminal","mistake","crime","crimeList","MURDER","KIDNAPPING","ROBBERY","randomNumberGenerator","start","Math","floor","random","createRandomCrime","randomIndex","quantity","targetArray","target","randomMurderGenerator","age","randomKidnappingGenerator","randomRobberyGenerator","StyledForm","form","KillingForm","onSubmit","onChange","onSkip","placeholder","value","onClick","StyledTimer","h1","Timer","onFinish","useState","seconds","setSeconds","useEffect","interval","setInterval","prev","console","log","clearInterval","StyledKilling","Killing","enteredText","setEnteredText","setDeads","currentCriminal","setCurrentCriminal","setMistake","setCrime","isFinished","setIsFinished","history","useHistory","setCriminalHandler","addDeadHandler","dead","timerId","setTimeout","clearTimeout","push","pathname","e","preventDefault","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","fb","firestore","signIn","username","email","dispatch","collection","where","get","findResponse","empty","forEach","doc","userVar","add","addResponse","window","sessionStorage","setItem","signOut","removeItem","deleteAccount","delete","updateKilledCount","update","err","updateVictims","fetchCommunity","orderBy","postList","docs","message","addPost","userId","content","userPostings","postObjForDB","writtenDate","Date","writtenUserName","writtenUserId","newPostObj","deletePost","updatedPostings","fetchRanking","userList","useActions","useDispatch","bindActionCreators","authActionCreators","useTypedSelector","useSelector","StyledPostForm","PostForm","warning","setWarning","authUser","trim","StyledPostItem","PostItem","isIdSame","setIsIdSame","posting","PostList","posts","StyledCommunity","Community","StyledVictimItem","VictimItem","victim","StyledVictimList","VictimList","StyledUserItem","UserItem","user","idx","showVictims","setShowVictims","authState","toggleShowVictimHandler","onMouseOver","onMouseLeave","UserList","users","StyledRanking","Ranking","provider","GoogleAuthProvider","googleSignIn","signInWithPopup","StyledHeader","header","Header","showUserOption","setShowUserOption","sessionUsername","getItem","sessionEmail","signInHandler","displayName","bind","GlobalStyle","createGlobalStyle","StyledHowToKill","HowToKill","StyledButton","Link","KillingStartButton","KillingStart","StyledKillingScoreText","KillingScoreText","StyledKillingScoreVictims","KillingScoreVictims","StyledKillingScoreButtons","KillingScoreButtons","StyledKillingScore","KillingScore","isNewRecord","setIsNewRecord","useLocation","compareDeadlist","newVictimsArray","includes","concatArray","concat","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77966d20.chunk.js","sourcesContent":["export enum ActionType {\n  SIGN_IN = '로그인 요청',\n  SIGN_OUT = '로그아웃',\n  UPDATE_KILLED_COUNT = '유저 스코어 업데이트',\n  UPDATE_VICTIMS = '죽인 범죄자 목록 업데이트',\n  ADD_USER_POSTING = '유저 게시물 상태 추가',\n  DELETE_USER_POSTING = '유저 게시물 상태 제거',\n  FETCH_RANKING = '랭킹 데이터 읽기 요청',\n  FETCH_RANKING_SUCCESS = '랭킹 데이터 읽기 성공',\n  FETCH_RANKING_FAILURE = '랭킹 데이터 읽기 실패',\n  FETCH_COMMUNITY = '게시물 데이터 읽기 요청',\n  FETCH_COMMUNITY_SUCCESS = '게시물 데이터 읽기 성공',\n  FETCH_COMMUNITY_FAILURE = '게시물 데이터 읽기 실패',\n  ADD_POST = '게시물 작성',\n  DELETE_POST = '게시물 삭제',\n}\n","import { User } from '../../types';\nimport { ActionType } from '../action-types';\nimport { Actions } from '../actions';\n\ntype authUser = User | null;\n\nconst initialState = null;\n\nexport const authReducer = (\n  state: authUser = initialState,\n  action: Actions\n): authUser => {\n  switch (action.type) {\n    case ActionType.SIGN_IN:\n      return action.payload;\n    case ActionType.SIGN_OUT:\n      return null;\n    case ActionType.UPDATE_KILLED_COUNT:\n      return { ...state, killedCount: action.payload } as authUser;\n    case ActionType.UPDATE_VICTIMS:\n      return { ...state, victims: action.payload } as authUser;\n    case ActionType.ADD_USER_POSTING:\n      return {\n        ...state,\n        postings: [...state!.postings, action.payload],\n      } as authUser;\n    case ActionType.DELETE_USER_POSTING:\n      return {\n        ...state,\n        postings: state!.postings.filter((postId) => {\n          return postId !== action.payload;\n        }),\n      } as authUser;\n    default:\n      return state;\n  }\n};\n","enum crimeType {\n  MURDER = 'murder',\n  KIDNAPPING = 'kidnapping',\n  ROBBERY = 'robbery',\n}\n\nconst crimeList = [crimeType.MURDER, crimeType.KIDNAPPING, crimeType.ROBBERY];\n\nconst randomNumberGenerator = (start: number, length: number) => {\n  return start + Math.floor(Math.random() * length);\n};\n\nconst randomMurderGenerator = () => {\n  const quantity = randomNumberGenerator(5, 10);\n\n  const targetArray = [\n    'farmers',\n    'carpenters',\n    'librarians',\n    'football referees',\n    'software developers',\n    'pharmacists',\n    'firefighters',\n  ];\n  const target = targetArray[randomNumberGenerator(0, targetArray.length)];\n\n  return `killed ${quantity} ${target} for no reason...`;\n};\n\nconst randomKidnappingGenerator = () => {\n  const age = randomNumberGenerator(4, 12);\n\n  const targetArray = ['youtuber', 'child monk', 'princess', 'genius kid'];\n  const target = targetArray[randomNumberGenerator(0, targetArray.length)];\n\n  return `kidnapped ${\n    age === 8 || age === 11 ? 'an' : 'a'\n  } ${age}-year-old ${target} to get people's attention...`;\n};\n\nconst randomRobberyGenerator = () => {\n  const quantity = randomNumberGenerator(5, 50);\n\n  const targetArray = [\n    'bank',\n    'jewelry store',\n    'convenience store',\n    'chinese restaurant',\n    'waxing shop',\n    'vegan bakery',\n    'laundry shop',\n  ];\n  const target = targetArray[randomNumberGenerator(0, targetArray.length)];\n\n  return `robbed a ${target} for ${quantity} million dollars`;\n};\n\nconst createRandomCrime = () => {\n  const randomIndex = randomNumberGenerator(0, crimeList.length);\n\n  const randomCrimeType = crimeList[randomIndex];\n\n  switch (randomCrimeType) {\n    case crimeType.MURDER:\n      return randomMurderGenerator();\n    case crimeType.KIDNAPPING:\n      return randomKidnappingGenerator();\n    case crimeType.ROBBERY:\n      return randomRobberyGenerator();\n\n    default:\n      return 'do something really bad';\n  }\n};\n\nexport default createRandomCrime;\n","import { User } from '../../types';\nimport { ActionType } from '../action-types';\nimport { Actions } from '../actions';\n\ntype RankingState = {\n  loading: boolean;\n  error: string | null;\n  data: User[];\n};\n\nconst initialState = {\n  loading: false,\n  error: null,\n  data: [],\n};\n\nexport const rankingReducer = (\n  state: RankingState = initialState,\n  action: Actions\n): RankingState => {\n  switch (action.type) {\n    case ActionType.FETCH_RANKING:\n      return { loading: true, error: null, data: [] };\n    case ActionType.FETCH_RANKING_SUCCESS:\n      return { loading: false, error: null, data: action.payload };\n    case ActionType.FETCH_RANKING_FAILURE:\n      return { loading: false, error: action.payload, data: [] };\n\n    default:\n      return state;\n  }\n};\n","import { Post } from '../../types';\nimport { ActionType } from '../action-types';\nimport { Actions } from '../actions';\n\ntype CommunityState = {\n  loading: boolean;\n  error: string | null;\n  data: Post[];\n};\n\nconst initialState = {\n  loading: false,\n  error: null,\n  data: [],\n};\n\nexport const communityReducer = (\n  state: CommunityState = initialState,\n  action: Actions\n): CommunityState => {\n  switch (action.type) {\n    case ActionType.FETCH_COMMUNITY:\n      return { loading: true, error: null, data: [] };\n    case ActionType.FETCH_COMMUNITY_SUCCESS:\n      return { loading: false, error: null, data: action.payload };\n    case ActionType.FETCH_COMMUNITY_FAILURE:\n      return { loading: false, error: action.payload, data: [] };\n    case ActionType.ADD_POST:\n      return {\n        loading: false,\n        error: null,\n        data: [action.payload, ...state.data],\n      };\n    case ActionType.DELETE_POST:\n      return {\n        loading: false,\n        error: null,\n        data: state.data.filter((post) => post.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\nimport { rankingReducer } from './rankingReducer';\nimport { communityReducer } from './communityReducer';\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  community: communityReducer,\n  ranking: rankingReducer,\n});\n\nexport default reducers;\n\nexport type RootState = ReturnType<typeof reducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers/reducers';\n\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\n","import styled from 'styled-components';\n\nconst StyledSelectionItem = styled.div<{ img: string }>`\n  background-image: ${(props) => `url(${props.img})`};\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  cursor: pointer;\n  width: 250px;\n  height: 250px;\n  line-height: 250px;\n  text-align: center;\n  border-radius: 10%;\n  margin: 20px;\n  p {\n    font-size: 30px;\n    color: #fff;\n    text-shadow: 2px 5px 5px #000;\n  }\n`;\n\nconst SelectionItem: React.FC<{ text: string; img: string }> = ({\n  text,\n  img,\n}) => {\n  return (\n    <StyledSelectionItem img={img}>\n      <p>{text}</p>\n    </StyledSelectionItem>\n  );\n};\n\nexport default SelectionItem;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport SelectionItem from '../components/SelectionItem';\n\nconst StyledHome = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  align-items: center;\n  padding-top: 100px;\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nconst Home = () => {\n  return (\n    <StyledHome>\n      <Link to=\"/killing-start\">\n        <SelectionItem\n          text=\"Do Your Job\"\n          img=\"https://www.firstpost.com/wp-content/uploads/2017/08/13245470_1129092717162553_622982228854157952_n-Copy-2.jpg\"\n        />\n      </Link>\n      <Link to=\"/community\">\n        <SelectionItem\n          text=\"Community\"\n          img=\"https://c4.wallpaperflare.com/wallpaper/791/198/515/death-note-kira-1920x1200-anime-death-note-hd-art-wallpaper-preview.jpg\"\n        />\n      </Link>\n      <Link to=\"/ranking\">\n        {' '}\n        <SelectionItem\n          text=\"Ranking\"\n          img=\"https://c4.wallpaperflare.com/wallpaper/162/325/134/art-kira-death-note-detective-wallpaper-preview.jpg\"\n        />\n      </Link>\n    </StyledHome>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nconst StyledDeadItem = styled.li`\n  position: relative;\n  margin: 5px;\n  &::before,\n  &::after {\n    content: '';\n    display: block;\n    background-color: red;\n    width: 100%;\n    height: 5px;\n    border-radius: 10px;\n    position: absolute;\n    top: 50%;\n    left: 0;\n  }\n  &::before {\n    transform: translateY(-50%) rotate(45deg);\n  }\n  &::after {\n    transform: translateY(-50%) rotate(-45deg);\n  }\n  img {\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n  }\n`;\n\nconst DeadItem: React.FC<{ name: string; img: string }> = ({ name, img }) => {\n  return (\n    <StyledDeadItem>\n      <img src={img} alt={name} />\n    </StyledDeadItem>\n  );\n};\n\nexport default DeadItem;\n","import styled from 'styled-components';\nimport { Victim } from '../types';\nimport DeadItem from './DeadItem';\n\nconst StyledDeadList = styled.ul`\n  border: 3px solid #aaa;\n  width: 80%;\n  height: 100px;\n  margin: 20px 0 0;\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  overflow: auto;\n  p {\n    color: #fff;\n    font-size: 20px;\n    margin-left: 20px;\n  }\n`;\n\nconst DeadList: React.FC<{ deads: Victim[] }> = ({ deads }) => {\n  return (\n    <StyledDeadList>\n      {deads.length === 0 && <p>Kill Criminals for Justice...</p>}\n      {deads.length !== 0 &&\n        deads.map(({ name, img }) => {\n          return <DeadItem key={name} name={name} img={img} />;\n        })}\n    </StyledDeadList>\n  );\n};\n\nexport default DeadList;\n","const getRandomUser = async () => {\n  const res = await fetch(\n    'https://randomuser.me/api/?inc=name,location,picture'\n  );\n  const data = await res.json();\n\n  const randomUser = data.results[0];\n\n  return {\n    address: `${randomUser.location.city}, ${randomUser.location.state}`,\n    name: `${randomUser.name.first} ${randomUser.name.last}`,\n    img: randomUser.picture.large,\n  };\n};\n\nexport default getRandomUser;\n","import styled from 'styled-components';\n\nconst StyledMistake = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  span {\n    font-size: 30px;\n    color: red;\n  }\n`;\n\nconst Mistake = () => {\n  return (\n    <StyledMistake>\n      <span>You just killed an innocent person!</span>\n    </StyledMistake>\n  );\n};\n\nexport default Mistake;\n","import styled from 'styled-components';\nimport Mistake from './Mistake';\nimport { CurrentCriminal } from '../types/index';\n\nconst StyledNews = styled.div`\n  position: relative;\n  width: 80%;\n  flex: 1;\n  margin-top: 20px;\n  background-color: rgb(94, 10, 10);\n  user-select: none;\n`;\n\nconst StyledCriminalInfo = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  height: 100%;\n  img {\n    width: 200px;\n    height: 200px;\n  }\n  div {\n    h2 {\n      font-size: 36px;\n      color: #fff;\n      margin: 20px 0 0;\n    }\n    span {\n      display: block;\n      font-size: 16px;\n      color: #ccc;\n      margin: 5px;\n    }\n    address {\n      font-size: 20px;\n      color: #dedede;\n    }\n  }\n  p {\n    margin-top: 30px;\n    font-size: 22px;\n    color: #fff;\n  }\n`;\n\nconst CriminalNews: React.FC<{\n  criminal: CurrentCriminal | undefined;\n  mistake: boolean;\n  crime: string;\n}> = ({ criminal, mistake, crime }) => {\n  return (\n    <StyledNews>\n      {mistake && <Mistake />}\n      {criminal && (\n        <StyledCriminalInfo>\n          <img src={criminal.img} alt={criminal.name} />\n          <div>\n            <h2>{criminal.name}</h2>\n            <span>from</span>\n            <address>{criminal.address}</address>\n          </div>\n          <p>{crime}</p>\n        </StyledCriminalInfo>\n      )}\n    </StyledNews>\n  );\n};\n\nexport default CriminalNews;\n","import { ChangeEvent, FormEvent } from 'react';\nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  background-color: #111;\n  width: 80%;\n  height: 100px;\n  position: relative;\n  margin: 20px 0;\n\n  input {\n    background-color: transparent;\n    resize: none;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    padding: 20px;\n    color: #fff;\n    font-size: 24px;\n    border: none;\n    outline: none;\n  }\n  div {\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n  }\n  button {\n    &:first-of-type {\n      margin-right: 10px;\n    }\n    background-color: #333;\n    border: 2px solid #777;\n    color: #fff;\n    font-size: 20px;\n    padding: 8px 20px;\n    cursor: pointer;\n  }\n`;\n\nconst KillingForm: React.FC<{\n  onSubmit: (e: FormEvent) => void;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  onSkip: () => void;\n  text: string;\n}> = ({ onSubmit, onChange, onSkip, text }) => {\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <input\n        placeholder=\"Write Criminal's Name...\"\n        onChange={onChange}\n        value={text}\n      />\n      <div>\n        <button type=\"button\" onClick={onSkip}>\n          Skip\n        </button>\n        <button type=\"submit\">Done</button>\n      </div>\n    </StyledForm>\n  );\n};\n\nexport default KillingForm;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\nconst StyledTimer = styled.h1`\n  position: fixed;\n  top: 24px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 50px;\n`;\n\nconst Timer: React.FC<{ onFinish: () => void }> = ({ onFinish }) => {\n  const [seconds, setSeconds] = useState(60);\n\n  useEffect(() => {\n    let interval: ReturnType<typeof setInterval>;\n\n    if (seconds !== 0) {\n      interval = setInterval(() => {\n        setSeconds((prev) => prev - 1);\n      }, 1000);\n    } else if (seconds <= 0) {\n      console.log(seconds);\n      onFinish();\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [seconds]);\n\n  return <StyledTimer>{seconds}</StyledTimer>;\n};\n\nexport default Timer;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { ChangeEvent, FormEvent, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport DeadList from '../components/DeadList';\nimport { CurrentCriminal, Victim } from '../types';\nimport getRandomUser from '../apis/randomNews/randomUser';\nimport CriminalNews from '../components/CriminalNews';\nimport createRandomCrime from '../apis/randomNews/randomCrime';\nimport KillingForm from '../components/KillingForm';\nimport Timer from '../components/Timer';\nimport { useHistory } from 'react-router-dom';\n\nconst StyledKilling = styled.div`\n  position: absolute;\n  top: 80px;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst Killing = () => {\n  const [enteredText, setEnteredText] = useState('');\n  const [deads, setDeads] = useState<Victim[]>([]);\n  const [currentCriminal, setCurrentCriminal] = useState<CurrentCriminal>();\n  const [mistake, setMistake] = useState(false);\n  const [crime, setCrime] = useState('');\n  const [isFinished, setIsFinished] = useState(false);\n  const history = useHistory();\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setEnteredText(e.target.value);\n  };\n\n  const onSubmitHandler = (e: FormEvent) => {\n    e.preventDefault();\n\n    if (currentCriminal && currentCriminal.name === enteredText) {\n      addDeadHandler({\n        name: currentCriminal.name,\n        img: currentCriminal.img,\n      });\n      setCriminalHandler();\n    } else {\n      setMistake(true);\n    }\n\n    setEnteredText('');\n  };\n\n  const setCriminalHandler = async () => {\n    const criminal = await getRandomUser();\n    setCurrentCriminal(criminal);\n    const crime = createRandomCrime();\n    setCrime(crime);\n  };\n\n  const addDeadHandler = (dead: Victim) => {\n    setDeads((prev) => {\n      return [...prev, dead];\n    });\n  };\n\n  const setFinishedHandler = () => {\n    setIsFinished(true);\n  };\n\n  useEffect(() => {\n    setCriminalHandler();\n  }, []);\n\n  useEffect(() => {\n    let timerId: ReturnType<typeof setTimeout>;\n\n    if (mistake) {\n      timerId = setTimeout(() => {\n        setMistake(false);\n      }, 2000);\n    }\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [mistake]);\n\n  useEffect(() => {\n    if (isFinished) {\n      history.push({\n        pathname: '/killing-score',\n        state: { deads: deads },\n      });\n    }\n  }, [isFinished]);\n\n  return (\n    <StyledKilling>\n      <Timer onFinish={setFinishedHandler} />\n      <CriminalNews\n        criminal={currentCriminal}\n        mistake={mistake}\n        crime={crime}\n      />\n      <DeadList deads={deads} />\n      <KillingForm\n        onSubmit={onSubmitHandler}\n        onChange={onChangeHandler}\n        onSkip={setCriminalHandler}\n        text={enteredText}\n      />\n    </StyledKilling>\n  );\n};\n\nexport default Killing;\n","import firebase from 'firebase/app';\n\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBVTUjQ_WJeo5_xJ-hDDG8fmJPoupH-Dkg',\n  authDomain: 'death-note-77961.firebaseapp.com',\n  projectId: 'death-note-77961',\n  storageBucket: 'death-note-77961.appspot.com',\n  messagingSenderId: '531988946556',\n  appId: '1:531988946556:web:d970aa680edd089b6a73f9',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import { Dispatch } from 'redux';\nimport fb from '../apis/firebase/fb';\nimport { Post, User, Victim } from '../types';\nimport { ActionType } from './action-types';\n\nconst db = fb.firestore();\n\nexport const signIn = (username: string, email: string) => {\n  return async (dispatch: Dispatch) => {\n    let userVar: any;\n\n    const findResponse = await db\n      .collection('users')\n      .where('email', '==', email)\n      .get();\n\n    if (!findResponse.empty) {\n      findResponse.forEach((doc) => {\n        userVar = {\n          id: doc.id,\n          ...doc.data(),\n        };\n      });\n    } else {\n      const addResponse = await db.collection('users').add({\n        username,\n        email,\n        killedCount: 0,\n        victims: [],\n        postings: [],\n      });\n\n      userVar = {\n        id: addResponse.id,\n        username,\n        email,\n        killedCount: 0,\n        victims: [],\n        postings: [],\n      };\n    }\n\n    window.sessionStorage.setItem('username', userVar.username);\n    window.sessionStorage.setItem('email', userVar.email);\n\n    dispatch({\n      type: ActionType.SIGN_IN,\n      payload: userVar,\n    });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch: Dispatch) => {\n    window.sessionStorage.removeItem('user');\n    dispatch({ type: ActionType.SIGN_OUT });\n  };\n};\n\nexport const deleteAccount = (id: string) => {\n  return (dispatch: Dispatch) => {\n    db.collection('users').doc(id).delete();\n    window.sessionStorage.removeItem('user');\n    dispatch({ type: ActionType.SIGN_OUT });\n  };\n};\n\nexport const updateKilledCount = (id: string, killedCount: number) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      db.collection('users').doc(id).update({\n        killedCount: killedCount,\n      });\n      dispatch({ type: ActionType.UPDATE_KILLED_COUNT, payload: killedCount });\n    } catch (err) {\n      // 에러 처리 업데이트 예정\n      console.log(err);\n    }\n  };\n};\n\nexport const updateVictims = (id: string, victims: Victim[]) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      db.collection('users').doc(id).update({\n        victims: victims,\n      });\n      dispatch({ type: ActionType.UPDATE_VICTIMS, payload: victims });\n    } catch (err) {\n      // 에러 처리 업데이트 예정\n      console.log(err);\n    }\n  };\n};\n\nexport const fetchCommunity = () => {\n  return async (dispatch: Dispatch) => {\n    dispatch({\n      type: ActionType.FETCH_COMMUNITY,\n    });\n\n    try {\n      const res = await db\n        .collection('posts')\n        .orderBy('writtenDate', 'desc')\n        .get();\n      const postList = res.docs.map((doc) => {\n        return { ...(doc.data() as Post), id: doc.id };\n      });\n\n      dispatch({\n        type: ActionType.FETCH_COMMUNITY_SUCCESS,\n        payload: postList,\n      });\n    } catch (err) {\n      dispatch({\n        type: ActionType.FETCH_COMMUNITY_FAILURE,\n        payload: err.message,\n      });\n    }\n  };\n};\n\nexport const addPost = (\n  username: string,\n  userId: string,\n  content: string,\n  userPostings: string[]\n) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const postObjForDB = {\n        writtenDate: new Date(),\n        writtenUserName: username,\n        writtenUserId: userId,\n        content: content,\n      };\n\n      const res = await db.collection('posts').add(postObjForDB);\n      db.collection('users')\n        .doc(userId)\n        .update({\n          postings: [...userPostings, res.id],\n        });\n\n      const newPostObj = {\n        ...postObjForDB,\n        id: res.id,\n      };\n\n      dispatch({ type: ActionType.ADD_POST, payload: newPostObj });\n      dispatch({ type: ActionType.ADD_USER_POSTING, payload: res.id });\n    } catch (err) {\n      // 에러 처리 업데이트 예정\n      console.log(err);\n    }\n  };\n};\n\nexport const deletePost = (\n  postId: string,\n  userId: string,\n  updatedPostings: string[]\n) => {\n  return (dispatch: Dispatch) => {\n    try {\n      db.collection('posts').doc(postId).delete();\n      db.collection('users').doc(userId).update({\n        postings: updatedPostings,\n      });\n\n      dispatch({ type: ActionType.DELETE_USER_POSTING, payload: postId });\n      dispatch({ type: ActionType.DELETE_POST, payload: postId });\n    } catch (err) {\n      // 에러 처리 업데이트 예정\n      console.log(err);\n    }\n  };\n};\n\nexport const fetchRanking = () => {\n  return async (dispatch: Dispatch) => {\n    dispatch({\n      type: ActionType.FETCH_RANKING,\n    });\n\n    try {\n      const res = await db\n        .collection('users')\n        .orderBy('killedCount', 'desc')\n        .get();\n      const userList = res.docs.map((doc) => {\n        return { ...(doc.data() as User), id: doc.id };\n      });\n\n      dispatch({\n        type: ActionType.FETCH_RANKING_SUCCESS,\n        payload: userList,\n      });\n    } catch (err) {\n      dispatch({\n        type: ActionType.FETCH_RANKING_FAILURE,\n        payload: err.message,\n      });\n    }\n  };\n};\n","import { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as authActionCreators from '../state/action-creators';\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n\n  return bindActionCreators(authActionCreators, dispatch);\n};\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../state/reducers/reducers';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useEffect } from 'react';\nimport { FormEvent, useState } from 'react';\nimport styled from 'styled-components';\nimport { useActions } from '../hooks/useActions';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\n\nconst StyledPostForm = styled.form`\n  margin-bottom: 40px;\n  & > * {\n    display: block;\n    margin: 0 auto;\n    box-sizing: border-box;\n    width: 80%;\n    max-width: 600px;\n  }\n  textarea {\n    resize: none;\n    height: 180px;\n    font-size: 24px;\n    padding: 20px;\n    letter-spacing: 2px;\n    line-height: 1.5;\n  }\n  button {\n    cursor: pointer;\n    font-size: 20px;\n    padding: 10px 0;\n  }\n`;\n\nconst PostForm = () => {\n  const [enteredText, setEnteredText] = useState('');\n  const [warning, setWarning] = useState<string | null>(null);\n  const authUser = useTypedSelector((state) => state.auth);\n  const { addPost } = useActions();\n\n  const onSubmitHandler = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (enteredText.trim().length < 5) {\n      setWarning('Write at least 5 letters.');\n      return;\n    }\n\n    addPost(authUser!.username, authUser!.id, enteredText, authUser!.postings);\n    setEnteredText('');\n  };\n\n  useEffect(() => {\n    let timerId: ReturnType<typeof setTimeout>;\n    if (warning) {\n      timerId = setTimeout(() => {\n        setWarning(null);\n      }, 2000);\n    }\n    return () => clearTimeout(timerId);\n  }, [warning]);\n\n  return (\n    <StyledPostForm onSubmit={onSubmitHandler}>\n      {warning && <span>{warning}</span>}\n      <textarea\n        value={enteredText}\n        onChange={(e) => setEnteredText(e.target.value)}\n      />\n      <button>Post</button>\n    </StyledPostForm>\n  );\n};\n\nexport default PostForm;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Post } from '../types';\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { useActions } from '../hooks/useActions';\n\nconst StyledPostItem = styled.div`\n  position: relative;\n  margin: 30px auto 0;\n  padding: 30px 20px 20px;\n  width: 80%;\n  max-width: 600px;\n  background-color: #333;\n  span {\n    display: block;\n    font-size: 26px;\n    margin-left: 5px;\n  }\n  p {\n    background-color: #222;\n    color: #fff;\n    word-wrap: break-word;\n    font-size: 20px;\n    letter-spacing: 2px;\n    line-break: 1.4;\n    margin-top: 20px;\n    padding: 20px;\n  }\n  button {\n    font-size: 24px;\n    font-family: monospace;\n    color: #fff;\n    background: none;\n    border: 2px solid #fff;\n    cursor: pointer;\n    position: absolute;\n    top: 24px;\n    right: 24px;\n  }\n`;\n\nconst PostItem: React.FC<{ post: Post }> = ({ post }) => {\n  const [isIdSame, setIsIdSame] = useState(false);\n  const auth = useTypedSelector((state) => state.auth);\n  const { deletePost } = useActions();\n\n  useEffect(() => {\n    if (auth) {\n      setIsIdSame(post.writtenUserId === auth.id);\n    }\n  }, [auth]);\n\n  const deletePostHandler = () => {\n    deletePost(\n      post.id,\n      auth!.id,\n      auth!.postings.filter((posting) => {\n        return posting !== post.id;\n      })\n    );\n  };\n\n  return (\n    <StyledPostItem>\n      {isIdSame && <button onClick={deletePostHandler}>Delete</button>}\n      <span>{post.writtenUserName}</span>\n      <p>{post.content}</p>\n    </StyledPostItem>\n  );\n};\n\nexport default PostItem;\n","import { Post } from '../types';\nimport PostItem from './PostItem';\n\nconst PostList: React.FC<{ posts: Post[] }> = ({ posts }) => {\n  return (\n    <>\n      {posts.map((post) => {\n        return <PostItem key={post.id} post={post} />;\n      })}\n    </>\n  );\n};\n\nexport default PostList;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\nimport styled from 'styled-components';\nimport PostForm from '../components/PostForm';\nimport PostList from '../components/PostList';\nimport { useActions } from '../hooks/useActions';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\n\nconst StyledCommunity = styled.div`\n  color: #fff;\n  & > div > p,\n  h2 {\n    text-align: center;\n    padding: 50px;\n  }\n  h2 {\n    font-size: 50px;\n  }\n  & > div > p {\n    font-size: 30px;\n  }\n`;\n\nconst Community = () => {\n  const { community, auth } = useTypedSelector((state) => state);\n  const { loading, error, data: posts } = community;\n\n  const { fetchCommunity } = useActions();\n\n  useEffect(() => {\n    fetchCommunity();\n  }, []);\n\n  return (\n    <StyledCommunity>\n      <h2>Community</h2>\n      {auth && <PostForm />}\n      <div>\n        {loading && <p>loading...</p>}\n        {error && <p>{error}</p>}\n        {!loading && !posts.length && <p>No post...</p>}\n        {!loading && posts.length !== 0 && <PostList posts={posts} />}\n      </div>\n    </StyledCommunity>\n  );\n};\n\nexport default Community;\n","import { Victim } from '../types';\nimport styled from 'styled-components';\n\nconst StyledVictimItem = styled.li`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  text-align: center;\n  margin: 10px;\n  img {\n    border-radius: 50%;\n    width: 80px;\n    height: 80px;\n    margin-bottom: 10px;\n  }\n  span {\n    color: red;\n    font-size: 18px;\n  }\n`;\nconst VictimItem: React.FC<{ victim: Victim }> = ({ victim }) => {\n  return (\n    <StyledVictimItem>\n      <img src={victim.img} alt={victim.name} />\n      <span>{victim.name}</span>\n    </StyledVictimItem>\n  );\n};\n\nexport default VictimItem;\n","import { Victim } from '../types';\nimport VictimItem from './VictimItem';\nimport styled from 'styled-components';\n\nconst StyledVictimList = styled.ul`\n  background-color: #555;\n  color: #fff;\n  padding: 10px;\n  text-align: center;\n  border-radius: 20px;\n  border: 3px solid #777;\n  position: absolute;\n  top: 100%;\n  z-index: 100;\n  h3 {\n    font-size: 20px;\n  }\n  div {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    p {\n      font-size: 20px;\n      color: #000;\n      padding: 30px;\n    }\n  }\n`;\n\nconst VictimList: React.FC<{ victims: Victim[] }> = ({ victims }) => {\n  return (\n    <StyledVictimList>\n      <h3>Criminals punished by this Kira</h3>\n      <div>\n        {victims.length === 0 && <p>Not punished yet</p>}\n        {victims.map((victim) => {\n          return <VictimItem key={victim.name} victim={victim} />;\n        })}\n      </div>\n    </StyledVictimList>\n  );\n};\n\nexport default VictimList;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { User } from '../types';\nimport styled from 'styled-components';\nimport VictimList from './VictimList';\nimport { useState, useEffect } from 'react';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\n\nconst StyledUserItem = styled.div<{ isIdSame: boolean }>`\n  background-color: ${(props) => (props.isIdSame ? '#888' : '#555')};\n  border: ${(props) => (props.isIdSame ? '5px solid #ddd' : 'none')};\n  color: ${(props) => (props.isIdSame ? '#222' : '#ccc')};\n  border-radius: 20px;\n  box-sizing: content-box;\n  position: relative;\n  padding: 20px;\n  margin: 30px 20px;\n  display: flex;\n  & > span {\n    background-color: #222;\n    color: #ccc;\n    display: block;\n    width: 50px;\n    height: 50px;\n    font-size: 20px;\n    text-align: center;\n    line-height: 50px;\n  }\n  & > div {\n    margin-left: 30px;\n    h3 {\n      font-size: 24px;\n      margin-bottom: 10px;\n    }\n    span {\n      font-size: 18px;\n      display: block;\n      margin-bottom: 10px;\n    }\n  }\n`;\n\nconst UserItem: React.FC<{ user: User; idx: number }> = ({ user, idx }) => {\n  const [showVictims, setShowVictims] = useState(false);\n  const [isIdSame, setIsIdSame] = useState(false);\n  const authState = useTypedSelector((state) => state.auth);\n\n  const toggleShowVictimHandler = () => {\n    setShowVictims((prev) => !prev);\n  };\n\n  useEffect(() => {\n    if (authState) {\n      setIsIdSame(user.id === authState.id);\n    }\n  }, [authState]);\n\n  return (\n    <StyledUserItem isIdSame={isIdSame}>\n      <span>{idx}</span>\n      <div>\n        <h3>{`Name : ${user.username}`}</h3>\n        <span>{`Highest Score : ${user.killedCount}`}</span>\n        <span\n          onMouseOver={toggleShowVictimHandler}\n          onMouseLeave={toggleShowVictimHandler}\n        >{`Punished criminals : ${user.victims.length}`}</span>\n      </div>\n      {showVictims && <VictimList victims={user.victims} />}\n    </StyledUserItem>\n  );\n};\n\nexport default UserItem;\n","import { User } from '../types';\nimport UserItem from './UserItem';\n\nconst UserList: React.FC<{ users: User[] }> = ({ users }) => {\n  return (\n    <>\n      {users.map((user, idx) => {\n        return <UserItem key={user.id} user={user} idx={idx + 1} />;\n      })}\n    </>\n  );\n};\n\nexport default UserList;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\nimport UserList from '../components/UserList';\nimport styled from 'styled-components';\nimport { useActions } from '../hooks/useActions';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\n\nconst StyledRanking = styled.div`\n  color: #fff;\n  h2,\n  p {\n    padding: 50px;\n    text-align: center;\n  }\n  h2 {\n    font-size: 50px;\n  }\n  p {\n    font-size: 30px;\n  }\n`;\n\nconst Ranking = () => {\n  const { ranking, auth } = useTypedSelector((state) => state);\n  const { loading, error, data: users } = ranking;\n  const { fetchRanking } = useActions();\n\n  useEffect(() => {\n    fetchRanking();\n  }, []);\n\n  useEffect(() => {\n    fetchRanking();\n  }, [auth]);\n\n  return (\n    <StyledRanking>\n      <h2>Ranking</h2>\n      {loading && <p>loading...</p>}\n      {error && <p>{error}</p>}\n      {!loading && !users.length && <p>No user...</p>}\n      {!loading && users.length !== 0 && <UserList users={users} />}\n    </StyledRanking>\n  );\n};\n\nexport default Ranking;\n","import fb from './fb';\n\nconst provider = new fb.auth.GoogleAuthProvider();\n\nexport const googleSignIn = async () => {\n  const res = await fb.auth().signInWithPopup(provider);\n\n  return res.user;\n};\n\nexport const googleSignOut = () => {\n  fb.auth().signOut();\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useActions } from '../hooks/useActions';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { googleSignIn } from '../apis/firebase/fb.auth';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useEffect, useState } from 'react';\n\nconst StyledHeader = styled.header`\n  background-color: #333;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 30px;\n  height: 80px;\n  a {\n    color: inherit;\n    text-decoration: none;\n    h1 {\n      font-size: 30px;\n      color: #fff;\n    }\n  }\n  button {\n    background-color: #fff;\n    border: 3px solid #000;\n    border-radius: 30px;\n    width: 100px;\n    padding: 5px 0;\n    font-size: 16px;\n    cursor: pointer;\n  }\n  span {\n    cursor: pointer;\n    font-size: 24px;\n    color: #fff;\n  }\n  & > div {\n    position: relative;\n    width: 240px;\n    text-align: center;\n    div {\n      background-color: #222;\n      border-radius: 30px;\n      border: 4px solid #555;\n      position: absolute;\n      top: 40px;\n      width: 100%;\n      display: flex;\n      justify-content: center;\n      padding: 20px 0;\n      button:first-of-type {\n        margin-right: 20px;\n      }\n    }\n  }\n`;\n\n/* -------------------------------------------------------------------------- */\n\nconst Header = () => {\n  const authUser = useTypedSelector((state) => state.auth);\n  const { signIn, signOut, deleteAccount } = useActions();\n  const [showUserOption, setShowUserOption] = useState(false);\n\n  useEffect(() => {\n    const sessionUsername = window.sessionStorage.getItem('username');\n    const sessionEmail = window.sessionStorage.getItem('email');\n    if (sessionUsername && sessionEmail) {\n      signIn(sessionUsername, sessionEmail);\n    }\n  }, []);\n\n  const signInHandler = async () => {\n    const user = await googleSignIn();\n\n    if (user) {\n      signIn(user.displayName!, user.email!);\n    }\n  };\n\n  const userClickHandler = () => {\n    setShowUserOption((prev) => !prev);\n  };\n\n  return (\n    <>\n      <StyledHeader>\n        <Link to=\"/\">\n          <h1>DEATH NOTE</h1>\n        </Link>\n        {!authUser && <button onClick={signInHandler}>Sign In</button>}\n        {authUser && (\n          <div>\n            <span onClick={userClickHandler}>{authUser.username}</span>\n            {showUserOption && (\n              <div>\n                <button onClick={signOut}>Sign Out</button>\n                <button onClick={deleteAccount.bind(null, authUser.id)}>\n                  Delete Account\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </StyledHeader>\n    </>\n  );\n};\n\nexport default Header;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n/* -------------------------------- Reset CSS ------------------------------- */\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  /* ----------------------------- Global Styling ----------------------------- */\n  body,\n  *,\n  *::before,\n  *::after {\n    font-family: 'Special Elite', cursive, serif;\n  }\n\n  body {\n    background-color: #202020;\n    color: #aaa;\n  }\n\n  html,\n  body,\n  #root {\n    height: 100%;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nconst StyledHowToKill = styled.div`\n  background-color: #444;\n  color: #fff;\n  margin: 50px;\n  padding: 30px;\n  h1 {\n    font-size: 40px;\n    text-align: center;\n    margin-bottom: 20px;\n  }\n  ul {\n    li {\n      font-size: 20px;\n      margin-bottom: 10px;\n      text-shadow: 1px 2px 5px rgba(200, 200, 200, 0.2);\n    }\n  }\n`;\n\nconst HowToKill = () => {\n  return (\n    <StyledHowToKill>\n      <h1>Instruction</h1>\n      <ul>\n        <li>\n          - You will see a screen displays criminals' information and what they\n          did.\n        </li>\n        <li>\n          - As a Kira, write their names on a page of your Death Note on the\n          bottom. It's case-sensitive.\n        </li>\n        <li>\n          - If you can't write a name, just click the skip button then punish\n          next one.\n        </li>\n        <li>\n          - If you write a wrong name, there will be a screen blocking for 2\n          seconds.\n        </li>\n        <li>\n          - You have 60 seconds. Let's see how many criminals you can punish in\n          a minute.\n        </li>\n      </ul>\n    </StyledHowToKill>\n  );\n};\n\nexport default HowToKill;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst StyledButton = styled(Link)`\n  background-color: #222;\n  border: 4px solid #ccc;\n  border-radius: 20px;\n  display: block;\n  width: 200px;\n  padding: 10px 20px;\n  text-align: center;\n  margin: 0 auto;\n  font-size: 24px;\n  color: #eee;\n  text-decoration: none;\n`;\nconst KillingStartButton = () => {\n  return <StyledButton to=\"/killing\">Start Working</StyledButton>;\n};\n\nexport default KillingStartButton;\n","import HowToKill from '../components/HowToKill';\nimport KillingStartButton from '../components/KillingStartButton';\n\nconst KillingStart = () => {\n  return (\n    <>\n      <HowToKill />\n      <KillingStartButton />\n    </>\n  );\n};\n\nexport default KillingStart;\n","import styled from 'styled-components';\nimport { Victim } from '../types';\n\nconst StyledKillingScoreText = styled.div`\n  p {\n    font-size: 30px;\n    margin-bottom: 40px;\n    span {\n      font-size: 24px;\n      margin-bottom: 5px;\n      display: block;\n    }\n    b {\n      color: gold;\n    }\n  }\n`;\n\nconst KillingScoreText: React.FC<{ deads: Victim[] }> = ({ deads }) => {\n  return (\n    <StyledKillingScoreText>\n      {!deads.length && <p>You did nothing for justice... Shame on you!</p>}\n      {deads.length === 1 && (\n        <p>\n          You punished <b>1</b> criminal for justice!\n        </p>\n      )}\n      {deads.length > 1 && (\n        <p>\n          <span>Well done.</span>\n          You punished <b>{deads.length}</b> criminals for justice!\n        </p>\n      )}\n    </StyledKillingScoreText>\n  );\n};\n\nexport default KillingScoreText;\n","import styled from 'styled-components';\nimport { Victim } from '../types';\nimport VictimItem from './VictimItem';\n\nconst StyledKillingScoreVictims = styled.ul`\n  display: flex;\n  justify-content: center;\n  border: 4px solid #aaa;\n  padding: 20px 10px;\n  margin-bottom: 60px;\n`;\n\nconst KillingScoreVictims: React.FC<{ deads: Victim[] }> = ({ deads }) => {\n  return (\n    <StyledKillingScoreVictims>\n      {deads.length === 0 && <p>No criminal punished</p>}\n      {deads.length !== 0 &&\n        deads.map((dead) => {\n          return <VictimItem victim={dead} key={dead.name} />;\n        })}\n    </StyledKillingScoreVictims>\n  );\n};\n\nexport default KillingScoreVictims;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\n\nconst StyledKillingScoreButtons = styled.div`\n  display: flex;\n  justify-content: center;\n  a {\n    padding: 10px 20px;\n    margin: 30px;\n    font-size: 20px;\n    text-decoration: none;\n    background-color: #000;\n    color: #fff;\n    border-radius: 10px;\n    border: 2px solid #fff;\n  }\n`;\n\nconst KillingScoreButtons = () => {\n  const authUser = useTypedSelector((state) => state.auth);\n\n  return (\n    <StyledKillingScoreButtons>\n      <Link to=\"/killing-start\">Retry</Link>\n      {authUser && <Link to=\"/ranking\">Ranking</Link>}\n    </StyledKillingScoreButtons>\n  );\n};\n\nexport default KillingScoreButtons;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport styled from 'styled-components';\nimport { useLocation } from 'react-router';\nimport { Victim } from '../types';\nimport KillingScoreText from '../components/KillingScoreText';\nimport KillingScoreVictims from '../components/KillingScoreVictims';\nimport KillingScoreButtons from '../components/KillingScoreButtons';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { useEffect, useState } from 'react';\nimport { useActions } from '../hooks/useActions';\n\nconst StyledKillingScore = styled.div`\n  text-align: center;\n  margin: 30px;\n  color: #fff;\n  h1 {\n    font-size: 40px;\n    margin-bottom: 50px;\n  }\n  strong {\n    font-size: 30px;\n    color: yellow;\n    display: block;\n    margin-bottom: 10px;\n  }\n`;\n\ninterface StateType {\n  deads: Victim[];\n}\n\nconst KillingScore = () => {\n  const authUser = useTypedSelector((state) => state.auth);\n  const { updateKilledCount, updateVictims } = useActions();\n  const [isNewRecord, setIsNewRecord] = useState(false);\n  const location = useLocation<StateType>();\n  const { deads } = location.state;\n\n  useEffect(() => {\n    if (authUser) {\n      compareDeadlist();\n      if (authUser && deads.length > authUser.killedCount) {\n        updateKilledCount(authUser.id, deads.length);\n        setIsNewRecord(true);\n      }\n    }\n  }, [authUser]);\n\n  const compareDeadlist = () => {\n    const newVictimsArray = deads.filter((dead) => {\n      return !authUser!.victims.includes(dead);\n    });\n\n    if (newVictimsArray.length >= 1) {\n      const concatArray = authUser!.victims.concat(...newVictimsArray);\n      updateVictims(authUser!.id, concatArray);\n    }\n  };\n\n  return (\n    <StyledKillingScore>\n      <h1>Score</h1>\n      {isNewRecord && <strong>New Record!</strong>}\n      <KillingScoreText deads={deads} />\n      <KillingScoreVictims deads={deads} />\n      <KillingScoreButtons />\n    </StyledKillingScore>\n  );\n};\n\nexport default KillingScore;\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from '../state/store';\nimport Home from '../pages/Home';\nimport Killing from '../pages/Killing';\nimport Community from '../pages/Community';\nimport Ranking from '../pages/Ranking';\nimport Header from '../components/Header';\nimport GlobalStyle from '../styles/globalStyle';\nimport KillingStart from '../pages/KillingStart';\nimport KillingScore from '../pages/KillingScore';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <GlobalStyle />\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/killing\" component={Killing} />\n        <Route path=\"/killing-start\" component={KillingStart} />\n        <Route path=\"/killing-score\" component={KillingScore} />\n        <Route path=\"/community\" component={Community} />\n        <Route path=\"/ranking\" component={Ranking} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './app/App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}