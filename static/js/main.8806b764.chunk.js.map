{"version":3,"sources":["state/action-types.ts","state/reducers/authReducer.ts","apis/randomNews/randomCrime.ts","state/reducers/rankingReducer.ts","state/reducers/communityReducer.ts","state/reducers/reducers.ts","state/store.ts","components/SelectionItem.tsx","pages/Home.tsx","components/DeadItem.tsx","components/DeadList.tsx","apis/randomNews/randomUser.ts","components/Mistake.tsx","components/CriminalInfo.tsx","components/CriminalNews.tsx","components/KillingForm.tsx","components/Timer.tsx","pages/Killing.tsx","components/DisplayedMessage.tsx","components/PageHeading.tsx","apis/firebase/fb.ts","state/action-creators.ts","hooks/useActions.ts","hooks/useTypedSelector.ts","components/PostForm.tsx","components/PostItem.tsx","components/PostList.tsx","pages/Community.tsx","components/VictimItem.tsx","components/VictimList.tsx","components/UserItem.tsx","components/UserList.tsx","pages/Ranking.tsx","apis/firebase/fb.auth.ts","components/Heading.tsx","components/SignButton.tsx","components/Header.tsx","styles/globalStyle.ts","components/HowToKill.tsx","components/LinkButton.tsx","pages/KillingStart.tsx","components/KillingScoreText.tsx","components/KillingScoreVictims.tsx","components/KillingScoreButtons.tsx","pages/KillingScore.tsx","app/App.tsx","index.tsx"],"names":["ActionType","crimeType","initialState","loading","error","data","reducers","combineReducers","auth","state","action","type","SIGN_IN","payload","SIGN_OUT","UPDATE_KILLED_COUNT","killedCount","UPDATE_VICTIMS","victims","ADD_USER_POSTING","postings","DELETE_USER_POSTING","filter","postId","community","FETCH_COMMUNITY","FETCH_COMMUNITY_SUCCESS","FETCH_COMMUNITY_FAILURE","ADD_POST","DELETE_POST","post","id","ranking","FETCH_RANKING","FETCH_RANKING_SUCCESS","FETCH_RANKING_FAILURE","store","createStore","applyMiddleware","thunk","StyledSelectionItem","styled","div","props","img","SelectionItem","text","StyledHome","Home","to","StyledDeadItem","li","DeadItem","name","src","alt","StyledDeadList","ul","DeadList","deads","length","map","getRandomUser","a","fetch","res","json","randomUser","results","address","location","city","first","last","picture","large","StyledMistake","Mistake","StyledCriminalInfo","CriminalInfo","crime","StyledNews","CriminalNews","criminal","mistake","crimeList","MURDER","KIDNAPPING","ROBBERY","randomNumberGenerator","start","Math","floor","random","createRandomCrime","randomIndex","quantity","targetArray","target","randomMurderGenerator","age","randomKidnappingGenerator","randomRobberyGenerator","StyledForm","form","KillingForm","onSubmit","onChange","onSkip","inputRef","useRef","inputFocusHander","current","focus","placeholder","value","ref","onClick","StyledTimer","h1","Timer","onFinish","useState","seconds","setSeconds","useEffect","interval","setInterval","prev","clearInterval","StyledKilling","Killing","enteredText","setEnteredText","setDeads","currentCriminal","setCurrentCriminal","setMistake","setCrime","isFinished","setIsFinished","history","useHistory","setCriminalHandler","addDeadHandler","dead","timerId","setTimeout","clearTimeout","push","pathname","window","onkeyup","e","key","preventDefault","StyledDisplayedMessage","p","DisplayedMessage","message","StyledHeading","h2","PageHeading","children","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","fb","firestore","signIn","username","email","dispatch","collection","where","get","findResponse","empty","forEach","doc","userVar","add","addResponse","sessionStorage","setItem","signOut","removeItem","deleteAccount","delete","updateKilledCount","update","err","console","log","updateVictims","fetchCommunity","orderBy","postList","docs","addPost","userId","content","userPostings","postObjForDB","writtenDate","Date","writtenUserName","writtenUserId","newPostObj","deletePost","updatedPostings","fetchRanking","userList","useActions","useDispatch","bindActionCreators","authActionCreators","useTypedSelector","useSelector","StyledPostForm","PostForm","warning","setWarning","authUser","trim","StyledPostItem","PostItem","isIdSame","setIsIdSame","posting","PostList","posts","StyledCommunity","Community","StyledVictimItem","VictimItem","victim","StyledVictimList","VictimList","StyledUserItem","UserItem","user","idx","showVictims","setShowVictims","authState","UserList","users","StyledRanking","Ranking","provider","GoogleAuthProvider","googleSignIn","signInWithPopup","Link","Heading","StyledButton","button","SignButton","StyledHeader","header","Header","showUserOption","setShowUserOption","sessionUsername","getItem","sessionEmail","signInHandler","displayName","bind","GlobalStyle","createGlobalStyle","StyledHowToKill","HowToKill","StyledLink","LinkButton","href","StyledKillingStart","KillingStart","StyledKillingScoreText","KillingScoreText","StyledKillingScoreVictims","KillingScoreVictims","StyledKillingScoreButtons","KillingScoreButtons","StyledKillingScore","KillingScore","isNewRecord","setIsNewRecord","useLocation","compareDeadlist","newVictimsArray","find","concatArray","concat","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8806b764.chunk.js","sourcesContent":["export enum ActionType {\n  SIGN_IN = '로그인 요청',\n  SIGN_OUT = '로그아웃',\n  UPDATE_KILLED_COUNT = '유저 스코어 업데이트',\n  UPDATE_VICTIMS = '죽인 범죄자 목록 업데이트',\n  ADD_USER_POSTING = '유저 게시물 상태 추가',\n  DELETE_USER_POSTING = '유저 게시물 상태 제거',\n  FETCH_RANKING = '랭킹 데이터 읽기 요청',\n  FETCH_RANKING_SUCCESS = '랭킹 데이터 읽기 성공',\n  FETCH_RANKING_FAILURE = '랭킹 데이터 읽기 실패',\n  FETCH_COMMUNITY = '게시물 데이터 읽기 요청',\n  FETCH_COMMUNITY_SUCCESS = '게시물 데이터 읽기 성공',\n  FETCH_COMMUNITY_FAILURE = '게시물 데이터 읽기 실패',\n  ADD_POST = '게시물 작성',\n  DELETE_POST = '게시물 삭제',\n}\n","import { User } from '../../types';\nimport { ActionType } from '../action-types';\nimport { Actions } from '../actions';\n\ntype authUser = User | null;\n\nconst initialState = null;\n\nexport const authReducer = (\n  state: authUser = initialState,\n  action: Actions\n): authUser => {\n  switch (action.type) {\n    case ActionType.SIGN_IN:\n      return action.payload;\n    case ActionType.SIGN_OUT:\n      return null;\n    case ActionType.UPDATE_KILLED_COUNT:\n      return { ...state, killedCount: action.payload } as authUser;\n    case ActionType.UPDATE_VICTIMS:\n      return { ...state, victims: action.payload } as authUser;\n    case ActionType.ADD_USER_POSTING:\n      return {\n        ...state,\n        postings: [...state!.postings, action.payload],\n      } as authUser;\n    case ActionType.DELETE_USER_POSTING:\n      return {\n        ...state,\n        postings: state!.postings.filter((postId) => {\n          return postId !== action.payload;\n        }),\n      } as authUser;\n    default:\n      return state;\n  }\n};\n","enum crimeType {\n  MURDER = 'murder',\n  KIDNAPPING = 'kidnapping',\n  ROBBERY = 'robbery',\n}\n\nconst crimeList = [crimeType.MURDER, crimeType.KIDNAPPING, crimeType.ROBBERY];\n\nconst randomNumberGenerator = (start: number, length: number) => {\n  return start + Math.floor(Math.random() * length);\n};\n\nconst randomMurderGenerator = () => {\n  const quantity = randomNumberGenerator(5, 10);\n\n  const targetArray = [\n    '역사학자',\n    '중식 요리사',\n    '도서관 사서',\n    '골프 캐디',\n    '데이터 사이언티스트',\n    '한의사',\n    '소방관',\n    '인권변호사',\n  ];\n  const target = targetArray[randomNumberGenerator(0, targetArray.length)];\n\n  return `무고한 ${target} ${quantity}명을 이유도 없이 죽였습니다...`;\n};\n\nconst randomKidnappingGenerator = () => {\n  const age = randomNumberGenerator(4, 12);\n\n  const targetArray = ['유튜브 크리에이터', '동자승', '미술 천재'];\n  const target = targetArray[randomNumberGenerator(0, targetArray.length)];\n\n  return `사람들의 관심을 끌기 위해 ${age}세 ${target}(을)를 납치했습니다...`;\n};\n\nconst randomRobberyGenerator = () => {\n  const quantity = randomNumberGenerator(5, 50);\n\n  const targetArray = [\n    '신한은행',\n    '티파니앤코 매장',\n    '용산 드래곤힐 스파',\n    '양꼬치 전문점',\n    '왁싱샵',\n    '비건 베이커리',\n    '코인노래방',\n  ];\n  const target = targetArray[randomNumberGenerator(0, targetArray.length)];\n\n  return `${target}에서 ${quantity}억원을 훔쳐 달아났습니다...`;\n};\n\nconst createRandomCrime = () => {\n  const randomIndex = randomNumberGenerator(0, crimeList.length);\n\n  const randomCrimeType = crimeList[randomIndex];\n\n  switch (randomCrimeType) {\n    case crimeType.MURDER:\n      return randomMurderGenerator();\n    case crimeType.KIDNAPPING:\n      return randomKidnappingGenerator();\n    case crimeType.ROBBERY:\n      return randomRobberyGenerator();\n\n    default:\n      return '매우 나쁜 일을 저질렀습니다...';\n  }\n};\n\nexport default createRandomCrime;\n","import { User } from '../../types';\nimport { ActionType } from '../action-types';\nimport { Actions } from '../actions';\n\ntype RankingState = {\n  loading: boolean;\n  error: string | null;\n  data: User[];\n};\n\nconst initialState = {\n  loading: false,\n  error: null,\n  data: [],\n};\n\nexport const rankingReducer = (\n  state: RankingState = initialState,\n  action: Actions\n): RankingState => {\n  switch (action.type) {\n    case ActionType.FETCH_RANKING:\n      return { loading: true, error: null, data: [] };\n    case ActionType.FETCH_RANKING_SUCCESS:\n      return { loading: false, error: null, data: action.payload };\n    case ActionType.FETCH_RANKING_FAILURE:\n      return { loading: false, error: action.payload, data: [] };\n\n    default:\n      return state;\n  }\n};\n","import { Post } from '../../types';\nimport { ActionType } from '../action-types';\nimport { Actions } from '../actions';\n\ntype CommunityState = {\n  loading: boolean;\n  error: string | null;\n  data: Post[];\n};\n\nconst initialState = {\n  loading: false,\n  error: null,\n  data: [],\n};\n\nexport const communityReducer = (\n  state: CommunityState = initialState,\n  action: Actions\n): CommunityState => {\n  switch (action.type) {\n    case ActionType.FETCH_COMMUNITY:\n      return { loading: true, error: null, data: [] };\n    case ActionType.FETCH_COMMUNITY_SUCCESS:\n      return { loading: false, error: null, data: action.payload };\n    case ActionType.FETCH_COMMUNITY_FAILURE:\n      return { loading: false, error: action.payload, data: [] };\n    case ActionType.ADD_POST:\n      return {\n        loading: false,\n        error: null,\n        data: [action.payload, ...state.data],\n      };\n    case ActionType.DELETE_POST:\n      return {\n        loading: false,\n        error: null,\n        data: state.data.filter((post) => post.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\nimport { rankingReducer } from './rankingReducer';\nimport { communityReducer } from './communityReducer';\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  community: communityReducer,\n  ranking: rankingReducer,\n});\n\nexport default reducers;\n\nexport type RootState = ReturnType<typeof reducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers/reducers';\n\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\n","import styled from 'styled-components';\n\nconst StyledSelectionItem = styled.div<{ img: string }>`\n  background-image: ${(props) => `url(${props.img})`};\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  cursor: pointer;\n  width: 250px;\n  height: 250px;\n  line-height: 250px;\n  text-align: center;\n  border-radius: 30px;\n  margin: 20px;\n  p {\n    font-size: 2rem;\n    text-shadow: 3px 8px 5px #000;\n  }\n  @media (max-width: 699px) {\n    margin: 10px;\n    width: 180px;\n    height: 180px;\n    line-height: 180px;\n    p {\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nconst SelectionItem: React.FC<{ text: string; img: string }> = ({\n  text,\n  img,\n}) => {\n  return (\n    <StyledSelectionItem img={img}>\n      <p>{text}</p>\n    </StyledSelectionItem>\n  );\n};\n\nexport default SelectionItem;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport SelectionItem from '../components/SelectionItem';\n\nconst StyledHome = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  align-items: center;\n  height: 80vh;\n  max-width: 1000px;\n  margin: 0 auto;\n  a {\n    text-decoration: none;\n  }\n`;\n\nconst Home = () => {\n  return (\n    <StyledHome>\n      <Link to=\"/DEATH-NOTE/killing-start\">\n        <SelectionItem\n          text=\"키라 활동하기\"\n          img=\"https://www.firstpost.com/wp-content/uploads/2017/08/13245470_1129092717162553_622982228854157952_n-Copy-2.jpg\"\n        />\n      </Link>\n      <Link to=\"/DEATH-NOTE/community\">\n        <SelectionItem\n          text=\"커뮤니티\"\n          img=\"https://c4.wallpaperflare.com/wallpaper/791/198/515/death-note-kira-1920x1200-anime-death-note-hd-art-wallpaper-preview.jpg\"\n        />\n      </Link>\n      <Link to=\"/DEATH-NOTE/ranking\">\n        {' '}\n        <SelectionItem\n          text=\"랭킹\"\n          img=\"https://c4.wallpaperflare.com/wallpaper/162/325/134/art-kira-death-note-detective-wallpaper-preview.jpg\"\n        />\n      </Link>\n    </StyledHome>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nconst StyledDeadItem = styled.li`\n  position: relative;\n  margin: 5px;\n  &::before,\n  &::after {\n    content: '';\n    display: block;\n    background-color: red;\n    width: 100%;\n    height: 5px;\n    border-radius: 10px;\n    position: absolute;\n    top: 50%;\n    left: 0;\n  }\n  &::before {\n    transform: translateY(-50%) rotate(45deg);\n  }\n  &::after {\n    transform: translateY(-50%) rotate(-45deg);\n  }\n  img {\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n  }\n  @media (max-width: 699px) {\n    img {\n      width: 40px;\n      height: 40px;\n    }\n  }\n`;\n\nconst DeadItem: React.FC<{ name: string; img: string }> = ({ name, img }) => {\n  return (\n    <StyledDeadItem>\n      <img src={img} alt={name} />\n    </StyledDeadItem>\n  );\n};\n\nexport default DeadItem;\n","import styled from 'styled-components';\nimport { Victim } from '../types';\nimport DeadItem from './DeadItem';\n\nconst StyledDeadList = styled.ul`\n  border: 3px solid #aaa;\n  box-sizing: border-box;\n  width: 90%;\n  height: 80px;\n  margin: 20px 0 10px;\n  padding: 0 10px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  overflow: auto;\n  p {\n    font-size: 1.2rem;\n    margin-left: 20px;\n  }\n\n  @media (max-width: 699px) {\n    height: 60px;\n    border-width: 2px;\n    margin: 10px 0;\n    p {\n      font-size: 1.1rem;\n      margin-left: 0;\n    }\n  }\n`;\n\nconst DeadList: React.FC<{ deads: Victim[] }> = ({ deads }) => {\n  return (\n    <StyledDeadList>\n      {deads.length === 0 && <p>아직 처단한 범죄자가 없습니다.</p>}\n      {deads.length !== 0 &&\n        deads.map(({ name, img }) => {\n          return <DeadItem key={name} name={name} img={img} />;\n        })}\n    </StyledDeadList>\n  );\n};\n\nexport default DeadList;\n","const getRandomUser = async () => {\n  const res = await fetch(\n    'https://randomuser.me/api/?inc=name,location,picture'\n  );\n  const data = await res.json();\n\n  const randomUser = data.results[0];\n\n  return {\n    address: `${randomUser.location.city}, ${randomUser.location.state}`,\n    name: `${randomUser.name.first} ${randomUser.name.last}`,\n    img: randomUser.picture.large,\n  };\n};\n\nexport default getRandomUser;\n","import styled from 'styled-components';\n\nconst StyledMistake = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  span {\n    font-size: 2rem;\n    color: red;\n  }\n  @media (max-width: 699px) {\n    span {\n      font-size: 1.6rem;\n    }\n  }\n`;\n\nconst Mistake = () => {\n  return (\n    <StyledMistake>\n      <span>방금 무고한 사람을 죽였습니다!</span>\n    </StyledMistake>\n  );\n};\n\nexport default Mistake;\n","import styled from 'styled-components';\n\nconst StyledCriminalInfo = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  height: 100%;\n  font-family: 'Spacial Elite';\n  img {\n    border-radius: 50%;\n    width: 40%;\n    height: 40%;\n  }\n  div {\n    h2 {\n      font-size: 2rem;\n      margin: 10px 0 5px;\n    }\n    span {\n      color: #ccc;\n    }\n    address {\n      color: #ddd;\n\n      font-size: 1.2rem;\n      margin-top: 5px;\n    }\n  }\n  p {\n    font-size: 1.3rem;\n    line-height: 1.2;\n    margin-top: 20px;\n    font-family: 'Hahmlet';\n  }\n\n  @media (max-width: 699px) {\n    div {\n      h2 {\n        font-size: 1.2rem;\n      }\n      span {\n        margin-right: 5px;\n      }\n      address {\n        display: inline;\n        font-size: 1rem;\n      }\n    }\n    p {\n      font-size: 1.1rem;\n      margin-top: 10px;\n    }\n  }\n\n  @media (max-width: 399px) {\n    img {\n      width: 30%;\n      height: 30%;\n    }\n  }\n`;\n\nconst CriminalInfo: React.FC<{\n  img: string;\n  name: string;\n  address: string;\n  crime: string;\n}> = ({ img, name, address, crime }) => {\n  return (\n    <StyledCriminalInfo>\n      <img src={img} alt={name} />\n      <div>\n        <h2>{name}</h2>\n        <span>from</span>\n        <address>{address}</address>\n      </div>\n      <p>{crime}</p>\n    </StyledCriminalInfo>\n  );\n};\n\nexport default CriminalInfo;\n","import styled from 'styled-components';\nimport Mistake from './Mistake';\nimport { CurrentCriminal } from '../types/index';\nimport CriminalInfo from './CriminalInfo';\n\nconst StyledNews = styled.div`\n  position: relative;\n  width: 80%;\n  padding: 20px;\n  margin-top: 20px;\n  background-color: rgb(94, 10, 10, 0.5);\n  user-select: none;\n\n  @media (max-width: 699px) {\n    padding: 10px;\n    margin-top: 10px;\n  }\n`;\n\nconst CriminalNews: React.FC<{\n  criminal: CurrentCriminal | undefined;\n  mistake: boolean;\n  crime: string;\n}> = ({ criminal, mistake, crime }) => {\n  return (\n    <StyledNews>\n      {mistake && <Mistake />}\n      {criminal && (\n        <CriminalInfo\n          img={criminal.img}\n          name={criminal.name}\n          address={criminal.address}\n          crime={crime}\n        />\n      )}\n    </StyledNews>\n  );\n};\n\nexport default CriminalNews;\n","import { ChangeEvent, FormEvent, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  background-color: #111;\n  width: 90%;\n  height: 80px;\n  position: relative;\n\n  input {\n    background-color: transparent;\n    resize: none;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    padding: 20px;\n    font-size: 1.4rem;\n    border: none;\n    outline: none;\n  }\n  div {\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n    button {\n      &:first-of-type {\n        margin-right: 10px;\n      }\n      background-color: #333;\n      border: 2px solid #777;\n      font-size: 1.2rem;\n      padding: 8px 16px;\n      cursor: pointer;\n    }\n  }\n  span {\n    position: absolute;\n    top: 105%;\n    right: 5px;\n  }\n\n  @media (max-width: 699px) {\n    height: 60px;\n    input {\n      font-size: 1rem;\n      padding: 10px;\n    }\n    div {\n      bottom: 4px;\n      right: 4px;\n      button {\n        font-size: 1rem;\n        padding: 4px 8px;\n        &:first-of-type {\n          margin-right: 4px;\n        }\n      }\n    }\n    span {\n      font-size: 0.9rem;\n    }\n  }\n`;\n\nconst KillingForm: React.FC<{\n  onSubmit: (e: FormEvent) => void;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  onSkip: () => void;\n  text: string;\n}> = ({ onSubmit, onChange, onSkip, text }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const inputFocusHander = () => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <input\n        placeholder=\"범죄자의 이름을 적으세요...\"\n        onChange={onChange}\n        value={text}\n        ref={inputRef}\n      />\n      <div>\n        <button\n          type=\"button\"\n          onClick={() => {\n            onSkip();\n            inputFocusHander();\n          }}\n        >\n          Skip\n        </button>\n        <button type=\"submit\" onClick={inputFocusHander}>\n          Done\n        </button>\n      </div>\n      <span>ESC : Skip / ENTER : Done</span>\n    </StyledForm>\n  );\n};\n\nexport default KillingForm;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\nconst StyledTimer = styled.h1`\n  position: fixed;\n  top: 25px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 2rem;\n  color: red;\n  line-height: 2.5rem;\n  text-align: center;\n  z-index: 200;\n  @media (max-width: 699px) {\n    font-size: 1.4rem;\n    top: 10px;\n  }\n`;\n\nconst Timer: React.FC<{ onFinish: () => void }> = ({ onFinish }) => {\n  const [seconds, setSeconds] = useState(30);\n\n  useEffect(() => {\n    let interval: ReturnType<typeof setInterval>;\n\n    if (seconds !== 0) {\n      interval = setInterval(() => {\n        setSeconds((prev) => prev - 1);\n      }, 1000);\n    } else if (seconds <= 0) {\n      onFinish();\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [seconds]);\n\n  return <StyledTimer>{seconds}</StyledTimer>;\n};\n\nexport default Timer;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { ChangeEvent, FormEvent, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport DeadList from '../components/DeadList';\nimport { CurrentCriminal, Victim } from '../types';\nimport getRandomUser from '../apis/randomNews/randomUser';\nimport CriminalNews from '../components/CriminalNews';\nimport createRandomCrime from '../apis/randomNews/randomCrime';\nimport KillingForm from '../components/KillingForm';\nimport Timer from '../components/Timer';\nimport { useHistory } from 'react-router-dom';\n\nconst StyledKilling = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-around;\n  align-items: center;\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst Killing = () => {\n  const [enteredText, setEnteredText] = useState('');\n  const [deads, setDeads] = useState<Victim[]>([]);\n  const [currentCriminal, setCurrentCriminal] = useState<CurrentCriminal>();\n  const [mistake, setMistake] = useState(false);\n  const [crime, setCrime] = useState('');\n  const [isFinished, setIsFinished] = useState(false);\n  const history = useHistory();\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setEnteredText(e.target.value);\n  };\n\n  const onSubmitHandler = (e: FormEvent) => {\n    e.preventDefault();\n\n    if (enteredText.length === 0) return;\n    if (currentCriminal && currentCriminal.name === enteredText) {\n      addDeadHandler({\n        name: currentCriminal.name,\n        img: currentCriminal.img,\n      });\n      setCriminalHandler();\n    } else {\n      setMistake(true);\n    }\n\n    setEnteredText('');\n  };\n\n  const setCriminalHandler = async () => {\n    const criminal = await getRandomUser();\n    setCurrentCriminal(criminal);\n    const crime = createRandomCrime();\n    setCrime(crime);\n    setEnteredText('');\n  };\n\n  const addDeadHandler = (dead: Victim) => {\n    setDeads((prev) => {\n      return [...prev, dead];\n    });\n  };\n\n  const setFinishedHandler = () => {\n    setIsFinished(true);\n  };\n\n  useEffect(() => {\n    setCriminalHandler();\n  }, []);\n\n  useEffect(() => {\n    let timerId: ReturnType<typeof setTimeout>;\n\n    if (mistake) {\n      timerId = setTimeout(() => {\n        setMistake(false);\n      }, 2000);\n    }\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [mistake]);\n\n  useEffect(() => {\n    if (isFinished) {\n      history.push({\n        pathname: '/DEATH-NOTE/killing-score',\n        state: { deads: deads },\n      });\n    }\n  }, [isFinished]);\n\n  window.onkeyup = (e) => {\n    if (e.key === 'Escape') {\n      setCriminalHandler();\n    }\n  };\n\n  return (\n    <StyledKilling>\n      <Timer onFinish={setFinishedHandler} />\n      <CriminalNews\n        criminal={currentCriminal}\n        mistake={mistake}\n        crime={crime}\n      />\n      <DeadList deads={deads} />\n      <KillingForm\n        onSubmit={onSubmitHandler}\n        onChange={onChangeHandler}\n        onSkip={setCriminalHandler}\n        text={enteredText}\n      />\n    </StyledKilling>\n  );\n};\n\nexport default Killing;\n","import styled from 'styled-components';\n\nconst StyledDisplayedMessage = styled.p`\n  padding: 50px;\n  text-align: center;\n  font-size: 2rem;\n`;\n\nconst DisplayedMessage: React.FC<{ message: string }> = ({ message }) => {\n  return <StyledDisplayedMessage>{message}</StyledDisplayedMessage>;\n};\n\nexport default DisplayedMessage;\n","import styled from 'styled-components';\n\nconst StyledHeading = styled.h2`\n  display: block;\n  width: fit-content;\n  padding: 15px 30px 18px;\n  font-size: 2rem;\n  text-align: center;\n  margin: 30px auto;\n  border: 2px solid #fff;\n\n  @media (max-width: 699px) {\n    font-size: 1.4rem;\n    margin: 20px auto 10px;\n    padding: 10px 20px 12px;\n    border-width: 1px;\n  }\n`;\n\nconst PageHeading: React.FC = ({ children }) => {\n  return <StyledHeading>{children}</StyledHeading>;\n};\n\nexport default PageHeading;\n","import firebase from 'firebase/app';\n\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBVTUjQ_WJeo5_xJ-hDDG8fmJPoupH-Dkg',\n  authDomain: 'death-note-77961.firebaseapp.com',\n  projectId: 'death-note-77961',\n  storageBucket: 'death-note-77961.appspot.com',\n  messagingSenderId: '531988946556',\n  appId: '1:531988946556:web:d970aa680edd089b6a73f9',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import { Dispatch } from 'redux';\nimport fb from '../apis/firebase/fb';\nimport { Post, User, Victim } from '../types';\nimport { ActionType } from './action-types';\n\nconst db = fb.firestore();\n\nexport const signIn = (username: string, email: string) => {\n  return async (dispatch: Dispatch) => {\n    let userVar: any;\n\n    const findResponse = await db\n      .collection('users')\n      .where('email', '==', email)\n      .get();\n\n    if (!findResponse.empty) {\n      findResponse.forEach((doc) => {\n        userVar = {\n          id: doc.id,\n          ...doc.data(),\n        };\n      });\n    } else {\n      const addResponse = await db.collection('users').add({\n        username,\n        email,\n        killedCount: 0,\n        victims: [],\n        postings: [],\n      });\n\n      userVar = {\n        id: addResponse.id,\n        username,\n        email,\n        killedCount: 0,\n        victims: [],\n        postings: [],\n      };\n    }\n\n    window.sessionStorage.setItem('username', userVar.username);\n    window.sessionStorage.setItem('email', userVar.email);\n\n    dispatch({\n      type: ActionType.SIGN_IN,\n      payload: userVar,\n    });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch: Dispatch) => {\n    window.sessionStorage.removeItem('username');\n    window.sessionStorage.removeItem('email');\n    dispatch({ type: ActionType.SIGN_OUT });\n  };\n};\n\nexport const deleteAccount = (id: string) => {\n  return (dispatch: Dispatch) => {\n    db.collection('users').doc(id).delete();\n    window.sessionStorage.removeItem('username');\n    window.sessionStorage.removeItem('email');\n    dispatch({ type: ActionType.SIGN_OUT });\n  };\n};\n\nexport const updateKilledCount = (id: string, killedCount: number) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      db.collection('users').doc(id).update({\n        killedCount: killedCount,\n      });\n      dispatch({ type: ActionType.UPDATE_KILLED_COUNT, payload: killedCount });\n    } catch (err) {\n      // 에러 처리 업데이트 예정\n      console.log(err);\n    }\n  };\n};\n\nexport const updateVictims = (id: string, victims: Victim[]) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      db.collection('users').doc(id).update({\n        victims: victims,\n      });\n      dispatch({ type: ActionType.UPDATE_VICTIMS, payload: victims });\n    } catch (err) {\n      // 에러 처리 업데이트 예정\n      console.log(err);\n    }\n  };\n};\n\nexport const fetchCommunity = () => {\n  return async (dispatch: Dispatch) => {\n    dispatch({\n      type: ActionType.FETCH_COMMUNITY,\n    });\n\n    try {\n      const res = await db\n        .collection('posts')\n        .orderBy('writtenDate', 'desc')\n        .get();\n      const postList = res.docs.map((doc) => {\n        return { ...(doc.data() as Post), id: doc.id };\n      });\n\n      dispatch({\n        type: ActionType.FETCH_COMMUNITY_SUCCESS,\n        payload: postList,\n      });\n    } catch (err) {\n      dispatch({\n        type: ActionType.FETCH_COMMUNITY_FAILURE,\n        payload: err.message,\n      });\n    }\n  };\n};\n\nexport const addPost = (\n  username: string,\n  userId: string,\n  content: string,\n  userPostings: string[]\n) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const postObjForDB = {\n        writtenDate: new Date(),\n        writtenUserName: username,\n        writtenUserId: userId,\n        content: content,\n      };\n\n      const res = await db.collection('posts').add(postObjForDB);\n      db.collection('users')\n        .doc(userId)\n        .update({\n          postings: [...userPostings, res.id],\n        });\n\n      const newPostObj = {\n        ...postObjForDB,\n        id: res.id,\n      };\n\n      dispatch({ type: ActionType.ADD_POST, payload: newPostObj });\n      dispatch({ type: ActionType.ADD_USER_POSTING, payload: res.id });\n    } catch (err) {\n      // 에러 처리 업데이트 예정\n      console.log(err);\n    }\n  };\n};\n\nexport const deletePost = (\n  postId: string,\n  userId: string,\n  updatedPostings: string[]\n) => {\n  return (dispatch: Dispatch) => {\n    try {\n      db.collection('posts').doc(postId).delete();\n      db.collection('users').doc(userId).update({\n        postings: updatedPostings,\n      });\n\n      dispatch({ type: ActionType.DELETE_USER_POSTING, payload: postId });\n      dispatch({ type: ActionType.DELETE_POST, payload: postId });\n    } catch (err) {\n      // 에러 처리 업데이트 예정\n      console.log(err);\n    }\n  };\n};\n\nexport const fetchRanking = () => {\n  return async (dispatch: Dispatch) => {\n    dispatch({\n      type: ActionType.FETCH_RANKING,\n    });\n\n    try {\n      const res = await db\n        .collection('users')\n        .orderBy('killedCount', 'desc')\n        .get();\n      const userList = res.docs.map((doc) => {\n        return { ...(doc.data() as User), id: doc.id };\n      });\n\n      dispatch({\n        type: ActionType.FETCH_RANKING_SUCCESS,\n        payload: userList,\n      });\n    } catch (err) {\n      dispatch({\n        type: ActionType.FETCH_RANKING_FAILURE,\n        payload: err.message,\n      });\n    }\n  };\n};\n","import { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as authActionCreators from '../state/action-creators';\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n\n  return bindActionCreators(authActionCreators, dispatch);\n};\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../state/reducers/reducers';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useEffect } from 'react';\nimport { FormEvent, useState } from 'react';\nimport styled from 'styled-components';\nimport { useActions } from '../hooks/useActions';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\n\nconst StyledPostForm = styled.form`\n  position: relative;\n  width: 80%;\n  max-width: 600px;\n  margin: 0 auto 40px;\n  & > * {\n    display: block;\n    width: 100%;\n    box-sizing: border-box;\n    border: 3px solid #999;\n  }\n  span {\n    position: absolute;\n    top: 0;\n    background-color: #000;\n    padding: 10px;\n    font-size: 1.4rem;\n    text-align: center;\n  }\n  textarea {\n    resize: none;\n    height: 180px;\n    font-size: 1.6rem;\n    padding: 10px 20px;\n    letter-spacing: 0.2rem;\n    line-height: 1.5;\n    color: #000;\n    background-color: #fff;\n    &:focus {\n      outline: none;\n    }\n  }\n  button {\n    cursor: pointer;\n    font-size: 1.4rem;\n    padding: 10px 0;\n    color: #000;\n    border-top: none;\n    background-color: #fff;\n  }\n  @media (max-width: 699px) {\n    width: 90%;\n    textarea {\n      height: 120px;\n      font-size: 1.2rem;\n    }\n    button {\n      font-size: 1.2rem;\n      padding: 5px;\n    }\n  }\n`;\n\nconst PostForm = () => {\n  const [enteredText, setEnteredText] = useState('');\n  const [warning, setWarning] = useState<string | null>(null);\n  const authUser = useTypedSelector((state) => state.auth);\n  const { addPost } = useActions();\n\n  const onSubmitHandler = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (enteredText.trim().length < 5) {\n      setWarning('5글자 이상 적는 성의를 보여주세요.');\n      return;\n    }\n\n    addPost(authUser!.username, authUser!.id, enteredText, authUser!.postings);\n    setEnteredText('');\n  };\n\n  useEffect(() => {\n    let timerId: ReturnType<typeof setTimeout>;\n    if (warning) {\n      timerId = setTimeout(() => {\n        setWarning(null);\n      }, 2000);\n    }\n    return () => clearTimeout(timerId);\n  }, [warning]);\n\n  return (\n    <StyledPostForm onSubmit={onSubmitHandler}>\n      {warning && <span>{warning}</span>}\n      <textarea\n        value={enteredText}\n        onChange={(e) => setEnteredText(e.target.value)}\n      />\n      <button>Post</button>\n    </StyledPostForm>\n  );\n};\n\nexport default PostForm;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Post } from '../types';\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { useActions } from '../hooks/useActions';\n\nconst StyledPostItem = styled.div`\n  position: relative;\n  margin: 30px auto 0;\n  padding: 30px 20px 20px;\n  width: 80%;\n  max-width: 600px;\n  background-color: #333;\n  box-sizing: border-box;\n  span {\n    display: block;\n    font-size: 1.5rem;\n    margin-left: 5px;\n  }\n  p {\n    background-color: #222;\n    word-wrap: break-word;\n    font-size: 1.2rem;\n    letter-spacing: 2px;\n    line-height: 1.5;\n    margin-top: 20px;\n    padding: 20px;\n  }\n  button {\n    font-size: 1rem;\n    font-family: 'Special Elite';\n    padding-top: 4px;\n    background: none;\n    border: 2px solid #fff;\n    cursor: pointer;\n    position: absolute;\n    top: 24px;\n    right: 24px;\n  }\n  @media (max-width: 699px) {\n    width: 90%;\n    padding: 20px 10px 15px;\n    margin-top: 20px;\n    span {\n      font-size: 1rem;\n    }\n    p {\n      padding: 10px;\n      font-size: 1rem;\n    }\n    button {\n      top: 20px;\n      right: 20px;\n    }\n  }\n`;\n\nconst PostItem: React.FC<{ post: Post }> = ({ post }) => {\n  const [isIdSame, setIsIdSame] = useState(false);\n  const auth = useTypedSelector((state) => state.auth);\n  const { deletePost } = useActions();\n\n  useEffect(() => {\n    if (auth) {\n      setIsIdSame(post.writtenUserId === auth.id);\n    }\n  }, [auth]);\n\n  const deletePostHandler = () => {\n    deletePost(\n      post.id,\n      auth!.id,\n      auth!.postings.filter((posting) => {\n        return posting !== post.id;\n      })\n    );\n  };\n\n  return (\n    <StyledPostItem>\n      {isIdSame && <button onClick={deletePostHandler}>Delete</button>}\n      <span>{post.writtenUserName}</span>\n      <p>{post.content}</p>\n    </StyledPostItem>\n  );\n};\n\nexport default PostItem;\n","import { Post } from '../types';\nimport PostItem from './PostItem';\n\nconst PostList: React.FC<{ posts: Post[] }> = ({ posts }) => {\n  return (\n    <>\n      {posts.map((post) => {\n        return <PostItem key={post.id} post={post} />;\n      })}\n    </>\n  );\n};\n\nexport default PostList;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\nimport styled from 'styled-components';\nimport DisplayedMessage from '../components/DisplayedMessage';\nimport PageHeading from '../components/PageHeading';\nimport PostForm from '../components/PostForm';\nimport PostList from '../components/PostList';\nimport { useActions } from '../hooks/useActions';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\n\nconst StyledCommunity = styled.div`\n  padding-bottom: 50px;\n`;\n\nconst Community = () => {\n  const { community, auth } = useTypedSelector((state) => state);\n  const { loading, error, data: posts } = community;\n\n  const { fetchCommunity } = useActions();\n\n  useEffect(() => {\n    fetchCommunity();\n  }, []);\n\n  return (\n    <StyledCommunity>\n      <PageHeading>커뮤니티</PageHeading>\n      {auth && <PostForm />}\n      <div>\n        {loading && <DisplayedMessage message=\"Loading...\" />}\n        {error && <DisplayedMessage message={error} />}\n        {!loading && !posts.length && (\n          <DisplayedMessage message=\"게시물이 없습니다...\" />\n        )}\n        {!loading && posts.length !== 0 && <PostList posts={posts} />}\n      </div>\n    </StyledCommunity>\n  );\n};\n\nexport default Community;\n","import { Victim } from '../types';\nimport styled from 'styled-components';\n\nconst StyledVictimItem = styled.li`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  text-align: center;\n  margin: 10px;\n  width: 120px;\n  height: auto;\n  img {\n    border-radius: 50%;\n    width: 80px;\n    height: 80px;\n    margin-bottom: 10px;\n  }\n  span {\n    color: red;\n    font-size: 1.1rem;\n  }\n  @media (max-width: 699px) {\n    width: 100px;\n    img {\n      width: 65px;\n      height: 65px;\n    }\n    span {\n      font-size: 1rem;\n    }\n  }\n`;\nconst VictimItem: React.FC<{ victim: Victim }> = ({ victim }) => {\n  return (\n    <StyledVictimItem>\n      <img src={victim.img} alt={victim.name} />\n      <span>{victim.name}</span>\n    </StyledVictimItem>\n  );\n};\n\nexport default VictimItem;\n","import { Victim } from '../types';\nimport VictimItem from './VictimItem';\nimport styled from 'styled-components';\n\nconst StyledVictimList = styled.ul`\n  background-color: #555;\n  padding: 10px;\n  text-align: center;\n  border-radius: 20px;\n  border: 3px solid #777;\n  position: absolute;\n  top: 100%;\n  z-index: 100;\n  h3 {\n    font-size: 1.5rem;\n    margin: 20px 0;\n  }\n  div {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    p {\n      font-size: 1.2rem;\n      color: #000;\n      padding: 20px;\n    }\n  }\n\n  @media (max-width: 699px) {\n    h3 {\n      font-size: 1rem;\n      margin: 10px 0;\n    }\n    div {\n      p {\n        font-size: 1rem;\n        padding: 10px;\n      }\n    }\n  }\n`;\n\nconst VictimList: React.FC<{ victims: Victim[]; username: string }> = ({\n  victims,\n  username,\n}) => {\n  return (\n    <StyledVictimList>\n      <h3>{username} 키라가 응징한 범죄자</h3>\n      <div>\n        {victims.length === 0 && <p>아직 활동을 시작하지 않았습니다.</p>}\n        {victims.map((victim) => {\n          return <VictimItem key={victim.name} victim={victim} />;\n        })}\n      </div>\n    </StyledVictimList>\n  );\n};\n\nexport default VictimList;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { User } from '../types';\nimport styled from 'styled-components';\nimport VictimList from './VictimList';\nimport { useState, useEffect } from 'react';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\n\nconst StyledUserItem = styled.div<{ isIdSame: boolean }>`\n  background-color: ${(props) => (props.isIdSame ? '#888' : '#555')};\n  color: ${(props) => (props.isIdSame ? '#222' : '#ccc')};\n  border: ${(props) => (props.isIdSame ? '5px solid #ddd' : 'none')};\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  position: relative;\n  padding: 20px;\n  margin: 20px auto 0;\n  padding: 30px 20px 20px;\n  width: 85%;\n  max-width: 1000px;\n  cursor: pointer;\n  & > span {\n    background-color: #222;\n    display: block;\n    width: 50px;\n    height: 50px;\n    font-size: 1.5rem;\n    text-align: center;\n    line-height: 50px;\n  }\n  & > div {\n    margin-left: 30px;\n    h3 {\n      font-size: 1.4rem;\n      margin-bottom: 10px;\n    }\n    span {\n      font-size: 1.1rem;\n      display: block;\n      margin-bottom: 10px;\n    }\n  }\n\n  @media (max-width: 699px) {\n    width: 85%;\n    padding: 10px;\n    & > span {\n      width: 30px;\n      height: 30px;\n      line-height: 30px;\n      font-size: 1.3rem;\n    }\n    & > div {\n      margin-left: 10px;\n      h3 {\n        font-size: 1.1rem;\n      }\n      span {\n        font-size: 1rem;\n      }\n    }\n  }\n`;\n\nconst UserItem: React.FC<{ user: User; idx: number }> = ({ user, idx }) => {\n  const [showVictims, setShowVictims] = useState(false);\n  const [isIdSame, setIsIdSame] = useState(false);\n  const authState = useTypedSelector((state) => state.auth);\n\n  const toggleShowVictimHandler = () => {\n    setShowVictims((prev) => !prev);\n  };\n\n  useEffect(() => {\n    if (authState) {\n      setIsIdSame(user.id === authState.id);\n    }\n  }, [authState]);\n\n  return (\n    <StyledUserItem isIdSame={isIdSame} onClick={toggleShowVictimHandler}>\n      <span>{idx}</span>\n      <div>\n        <h3>{`이름 : ${user.username}`}</h3>\n        <span>{`최고 점수 : ${user.killedCount}`}</span>\n        <span>{`응징한 범죄자 : ${user.victims.length}`}</span>\n      </div>\n      {showVictims && (\n        <VictimList victims={user.victims} username={user.username} />\n      )}\n    </StyledUserItem>\n  );\n};\n\nexport default UserItem;\n","import { User } from '../types';\nimport UserItem from './UserItem';\n\nconst UserList: React.FC<{ users: User[] }> = ({ users }) => {\n  return (\n    <>\n      {users.map((user, idx) => {\n        return <UserItem key={user.id} user={user} idx={idx + 1} />;\n      })}\n    </>\n  );\n};\n\nexport default UserList;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\nimport UserList from '../components/UserList';\nimport { useActions } from '../hooks/useActions';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport PageHeading from '../components/PageHeading';\nimport DisplayedMessage from '../components/DisplayedMessage';\nimport styled from 'styled-components';\n\nconst StyledRanking = styled.div`\n  padding-bottom: 50px;\n`;\n\nconst Ranking = () => {\n  const { ranking, auth } = useTypedSelector((state) => state);\n  const { loading, error, data: users } = ranking;\n  const { fetchRanking } = useActions();\n\n  useEffect(() => {\n    fetchRanking();\n  }, []);\n\n  useEffect(() => {\n    fetchRanking();\n  }, [auth]);\n\n  return (\n    <StyledRanking>\n      <PageHeading>랭킹</PageHeading>\n      {loading && <DisplayedMessage message=\"Loading...\" />}\n      {error && <DisplayedMessage message={error} />}\n      {!loading && !users.length && (\n        <DisplayedMessage message=\"사용자가 없습니다...\" />\n      )}\n      {!loading && users.length !== 0 && <UserList users={users} />}\n    </StyledRanking>\n  );\n};\n\nexport default Ranking;\n","import fb from './fb';\n\nconst provider = new fb.auth.GoogleAuthProvider();\n\nexport const googleSignIn = async () => {\n  const res = await fb.auth().signInWithPopup(provider);\n\n  return res.user;\n};\n\nexport const googleSignOut = () => {\n  fb.auth().signOut();\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledHeading = styled(Link)`\n  color: inherit;\n  text-decoration: none;\n  h1 {\n    font-size: 2rem;\n    font-family: 'Special Elite';\n    letter-spacing: 2px;\n    padding-top: 8px;\n    text-align: center;\n  }\n\n  @media (max-width: 699px) {\n    h1 {\n      font-size: 1.4rem;\n      max-width: 120px;\n    }\n  }\n`;\n\nconst Heading = () => {\n  return (\n    <StyledHeading to=\"/DEATH-NOTE\">\n      <h1>DEATH NOTE</h1>\n    </StyledHeading>\n  );\n};\n\nexport default Heading;\n","import styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  background-color: #fff;\n  color: #000;\n  font-family: monospace;\n  border: none;\n  /* border-radius: 12px; */\n  font-size: 1.1rem;\n  width: 100px;\n  padding: 10px 0;\n  cursor: pointer;\n  @media (max-width: 699px) {\n    padding: 0;\n  }\n`;\nconst SignButton: React.FC<{ onClick: () => void }> = ({\n  onClick,\n  children,\n}) => {\n  return <StyledButton onClick={onClick}>{children}</StyledButton>;\n};\n\nexport default SignButton;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useActions } from '../hooks/useActions';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { googleSignIn } from '../apis/firebase/fb.auth';\nimport styled from 'styled-components';\nimport { useEffect, useState } from 'react';\nimport Heading from './Heading';\nimport SignButton from './SignButton';\n\nconst StyledHeader = styled.header`\n  background-color: #333;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 30px;\n  height: 80px;\n  & > div {\n    position: relative;\n    text-align: center;\n    margin-right: 20px;\n    span {\n      cursor: pointer;\n      font-size: 1.6rem;\n    }\n    div {\n      background-color: #222;\n      border-radius: 30px;\n      border: 4px solid #555;\n      position: absolute;\n      top: 40px;\n      right: 0;\n      width: 220px;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: space-around;\n      padding: 20px 10px;\n      z-index: 100;\n    }\n  }\n  @media (max-width: 699px) {\n    height: 60px;\n    padding: 0 10px;\n    & > div {\n      margin-right: 5px;\n      span {\n        font-size: 1.2rem;\n        display: block;\n        max-width: 100px;\n      }\n      div {\n        padding: 10px 5px;\n      }\n    }\n  }\n`;\n\n/* -------------------------------------------------------------------------- */\n\nconst Header = () => {\n  const authUser = useTypedSelector((state) => state.auth);\n  const { signIn, signOut, deleteAccount } = useActions();\n  const [showUserOption, setShowUserOption] = useState(false);\n\n  useEffect(() => {\n    const sessionUsername = window.sessionStorage.getItem('username');\n    const sessionEmail = window.sessionStorage.getItem('email');\n    if (sessionUsername && sessionEmail) {\n      signIn(sessionUsername, sessionEmail);\n    }\n  }, []);\n\n  const signInHandler = async () => {\n    const user = await googleSignIn();\n\n    if (user) {\n      signIn(user.displayName!, user.email!);\n      setShowUserOption(false);\n    }\n  };\n\n  return (\n    <StyledHeader>\n      <Heading />\n      {!authUser && <SignButton onClick={signInHandler}>Sign In</SignButton>}\n      {authUser && (\n        <div>\n          <span onClick={() => setShowUserOption((prev) => !prev)}>\n            {authUser.username}\n          </span>\n          {showUserOption && (\n            <div>\n              <SignButton onClick={signOut}>Sign Out</SignButton>\n              <SignButton onClick={deleteAccount.bind(null, authUser.id)}>\n                Delete Account\n              </SignButton>\n            </div>\n          )}\n        </div>\n      )}\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n/* -------------------------------- Reset CSS ------------------------------- */\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  /* ----------------------------- Global Styling ----------------------------- */\n  body,\n  *,\n  *::before,\n  *::after {\n    font-family: 'Hahmlet', sans-serif;\n    color: #fff;\n    user-select: none;\n  }\n\n  \n  body {\n    background-color: #202020;\n  }\n  \n  html,\n  body,\n  #root {\n    height: 100%;\n  }\n\n  input, textarea {\n    user-select: initial;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nconst StyledHowToKill = styled.div`\n  background-color: #444;\n  margin: 50px;\n  padding: 30px;\n  h1 {\n    font-size: 2.5rem;\n    text-align: center;\n    margin-bottom: 50px;\n  }\n  ul {\n    padding: 0 30px;\n    li {\n      font-size: 1.5rem;\n      margin-bottom: 20px;\n      text-shadow: 1px 2px 5px rgba(200, 200, 200, 0.2);\n    }\n  }\n\n  @media (max-width: 699px) {\n    margin: 20px;\n    padding: 10px;\n    h1 {\n      font-size: 2rem;\n      margin-bottom: 30px;\n    }\n    ul {\n      padding: 0;\n      li {\n        font-size: 1rem;\n      }\n    }\n  }\n`;\n\nconst HowToKill = () => {\n  return (\n    <StyledHowToKill>\n      <h1>데스노트 사용법</h1>\n      <ul>\n        <li>- 범죄자 정보를 보여주는 화면이 주어집니다.</li>\n        <li>- 그들의 이름을 적어서 응징하세요. 대소문자에 주의하세요.</li>\n        <li>\n          - 이름을 적기 힘든 범죄자가 나오면 Skip 버튼을 누르고 다음 범죄자를\n          처단하세요.\n        </li>\n        <li>- 잘못된 이름을 적으면 2초간 화면이 가려집니다.</li>\n        <li>\n          - 단 30초가 주어집니다. 얼마나 많은 범죄자를 처단할 수 있는지 봅시다.\n        </li>\n      </ul>\n    </StyledHowToKill>\n  );\n};\n\nexport default HowToKill;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  background-color: #000;\n  text-decoration: none;\n  font-size: 1.6rem;\n  border: 2px solid #fff;\n  border-radius: 10px;\n  padding: 20px 30px;\n  margin: 30px;\n  @media (max-width: 699px) {\n    font-size: 1.2rem;\n    padding: 10px 20px;\n    margin: 10px;\n  }\n`;\n\nconst LinkButton: React.FC<{ href: string }> = ({ href, children }) => {\n  return <StyledLink to={href}>{children}</StyledLink>;\n};\n\nexport default LinkButton;\n","import styled from 'styled-components';\nimport HowToKill from '../components/HowToKill';\nimport LinkButton from '../components/LinkButton';\n\nconst StyledKillingStart = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center; ;\n`;\n\nconst KillingStart = () => {\n  return (\n    <StyledKillingStart>\n      <HowToKill />\n      <LinkButton href=\"/DEATH-NOTE/killing\">시작하기</LinkButton>\n    </StyledKillingStart>\n  );\n};\n\nexport default KillingStart;\n","import styled from 'styled-components';\nimport { Victim } from '../types';\n\nconst StyledKillingScoreText = styled.div`\n  p {\n    font-size: 1.9rem;\n    margin-bottom: 40px;\n    b {\n      font-size: 2.2rem;\n      color: gold;\n    }\n  }\n\n  @media (max-width: 699px) {\n    p {\n      padding: 0 10px;\n      font-size: 1.2rem;\n      b {\n        font-size: 2rem;\n      }\n    }\n  }\n`;\n\nconst KillingScoreText: React.FC<{ deads: Victim[] }> = ({ deads }) => {\n  return (\n    <StyledKillingScoreText>\n      {!deads.length && <p>당신은 정의를 위해 한 일이 아무 것도 없습니다...</p>}\n      {deads.length === 1 && (\n        <p>\n          <b>1</b>명의 범죄자를 처단했습니다!\n        </p>\n      )}\n      {deads.length > 1 && (\n        <p>\n          정의를 위해 <b>{deads.length}</b>명의 범죄자를 응징했습니다!\n        </p>\n      )}\n    </StyledKillingScoreText>\n  );\n};\n\nexport default KillingScoreText;\n","import styled from 'styled-components';\nimport { Victim } from '../types';\nimport VictimItem from './VictimItem';\n\nconst StyledKillingScoreVictims = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  border: 3px solid red;\n  padding: 20px 10px;\n  margin: 0 auto 60px;\n  width: 80%;\n  max-width: 800px;\n\n  @media (max-width: 699px) {\n    padding: 10px;\n    margin-bottom: 30px;\n    width: 90%;\n  }\n`;\n\nconst KillingScoreVictims: React.FC<{ deads: Victim[] }> = ({ deads }) => {\n  return (\n    <StyledKillingScoreVictims>\n      {deads.length === 0 && <p>기록이 없습니다.</p>}\n      {deads.length !== 0 &&\n        deads.map((dead) => {\n          return <VictimItem victim={dead} key={dead.name} />;\n        })}\n    </StyledKillingScoreVictims>\n  );\n};\n\nexport default KillingScoreVictims;\n","import styled from 'styled-components';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport LinkButton from './LinkButton';\n\nconst StyledKillingScoreButtons = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst KillingScoreButtons = () => {\n  const authUser = useTypedSelector((state) => state.auth);\n\n  return (\n    <StyledKillingScoreButtons>\n      <LinkButton href=\"/DEATH-NOTE/killing-start\">재시도</LinkButton>\n      {authUser && (\n        <LinkButton href=\"/DEATH-NOTE/ranking\">랭킹 보기</LinkButton>\n      )}\n    </StyledKillingScoreButtons>\n  );\n};\n\nexport default KillingScoreButtons;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport styled from 'styled-components';\nimport { useLocation } from 'react-router';\nimport { Victim } from '../types';\nimport KillingScoreText from '../components/KillingScoreText';\nimport KillingScoreVictims from '../components/KillingScoreVictims';\nimport KillingScoreButtons from '../components/KillingScoreButtons';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { useEffect, useState } from 'react';\nimport { useActions } from '../hooks/useActions';\nimport PageHeading from '../components/PageHeading';\n\nconst StyledKillingScore = styled.div`\n  text-align: center;\n  strong {\n    font-size: 2rem;\n    color: yellow;\n    display: block;\n    margin-bottom: 10px;\n  }\n\n  @media (max-width: 699px) {\n    strong {\n      font-size: 1.4rem;\n    }\n  }\n`;\n\ninterface StateType {\n  deads: Victim[];\n}\n\nconst KillingScore = () => {\n  const authUser = useTypedSelector((state) => state.auth);\n  const { updateKilledCount, updateVictims } = useActions();\n  const [isNewRecord, setIsNewRecord] = useState(false);\n  const location = useLocation<StateType>();\n  const { deads } = location.state;\n\n  useEffect(() => {\n    if (authUser) {\n      compareDeadlist();\n      if (authUser && deads.length > authUser.killedCount) {\n        updateKilledCount(authUser.id, deads.length);\n        setIsNewRecord(true);\n      }\n    }\n  }, [authUser]);\n\n  const compareDeadlist = () => {\n    const newVictimsArray = deads.filter((dead) => {\n      return !authUser!.victims.find((victim) => victim.name !== dead.name);\n    });\n\n    if (newVictimsArray.length >= 1) {\n      const concatArray = authUser!.victims.concat(...newVictimsArray);\n      updateVictims(authUser!.id, concatArray);\n    }\n  };\n\n  return (\n    <StyledKillingScore>\n      <PageHeading>결과</PageHeading>\n      {isNewRecord && <strong>신기록 달성!</strong>}\n      <KillingScoreText deads={deads} />\n      <KillingScoreVictims deads={deads} />\n      <KillingScoreButtons />\n    </StyledKillingScore>\n  );\n};\n\nexport default KillingScore;\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from '../state/store';\nimport Home from '../pages/Home';\nimport Killing from '../pages/Killing';\nimport Community from '../pages/Community';\nimport Ranking from '../pages/Ranking';\nimport Header from '../components/Header';\nimport GlobalStyle from '../styles/globalStyle';\nimport KillingStart from '../pages/KillingStart';\nimport KillingScore from '../pages/KillingScore';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <GlobalStyle />\n      <Header />\n      <Switch>\n        <Route path=\"/DEATH-NOTE\" exact component={Home} />\n        <Route path=\"/DEATH-NOTE/killing\" component={Killing} />\n        <Route path=\"/DEATH-NOTE/killing-start\" component={KillingStart} />\n        <Route path=\"/DEATH-NOTE/killing-score\" component={KillingScore} />\n        <Route path=\"/DEATH-NOTE/community\" component={Community} />\n        <Route path=\"/DEATH-NOTE/ranking\" component={Ranking} />\n        <Redirect to=\"/DEATH-NOTE\" />\n      </Switch>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './app/App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}